{"ast":null,"code":"var _jsxFileName = \"/Users/harshmishra/Desktop/dashboard/frontend/src/Components/Selector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Selector = ({\n  options,\n  selectedCurrencies,\n  setSelectedCurrencies\n}) => {\n  _s();\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [shiftSelected, setShiftSelected] = useState([]);\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n  const handleCheckboxChange = useCallback((e, currency) => {\n    let updatedSelected = [...selectedCurrencies];\n    if (e.nativeEvent.shiftKey && shiftSelected.length > 0) {\n      const lastSelected = shiftSelected[shiftSelected.length - 1];\n      const start = options.findIndex(opt => opt.value === lastSelected);\n      const end = options.findIndex(opt => opt.value === currency);\n      const range = options.slice(Math.min(start, end), Math.max(start, end) + 1).map(opt => opt.value);\n      if (e.target.checked) {\n        updatedSelected = [...new Set([...updatedSelected, ...range])];\n      } else {\n        updatedSelected = updatedSelected.filter(sel => !range.includes(sel));\n      }\n      setShiftSelected(range);\n    } else {\n      if (e.target.checked) {\n        updatedSelected.push(currency);\n      } else {\n        updatedSelected = updatedSelected.filter(sel => sel !== currency);\n      }\n      setShiftSelected([currency]);\n    }\n    setSelectedCurrencies(updatedSelected);\n  }, [selectedCurrencies, shiftSelected, setSelectedCurrencies, options]);\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n      caret: true,\n      children: \"Select Currencies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      children: options.map(option => /*#__PURE__*/_jsxDEV(DropdownItem, {\n        toggle: false,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedCurrencies.includes(option.value),\n          onChange: e => handleCheckboxChange(e, option.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), \" \", option.label]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Selector, \"7a2499b8D89/l24LkuuyIP3nvog=\");\n_c = Selector;\nexport default Selector;\nvar _c;\n$RefreshReg$(_c, \"Selector\");","map":{"version":3,"names":["React","useState","useCallback","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","jsxDEV","_jsxDEV","Selector","options","selectedCurrencies","setSelectedCurrencies","_s","dropdownOpen","setDropdownOpen","shiftSelected","setShiftSelected","toggle","prevState","handleCheckboxChange","e","currency","updatedSelected","nativeEvent","shiftKey","length","lastSelected","start","findIndex","opt","value","end","range","slice","Math","min","max","map","target","checked","Set","filter","sel","includes","push","isOpen","children","caret","fileName","_jsxFileName","lineNumber","columnNumber","option","type","onChange","label","_c","$RefreshReg$"],"sources":["/Users/harshmishra/Desktop/dashboard/frontend/src/Components/Selector.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Selector = ({ options, selectedCurrencies, setSelectedCurrencies }) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [shiftSelected, setShiftSelected] = useState([]);\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  const handleCheckboxChange = useCallback((e, currency) => {\n    let updatedSelected = [...selectedCurrencies];\n    if (e.nativeEvent.shiftKey && shiftSelected.length > 0) {\n      const lastSelected = shiftSelected[shiftSelected.length - 1];\n      const start = options.findIndex(opt => opt.value === lastSelected);\n      const end = options.findIndex(opt => opt.value === currency);\n      const range = options.slice(Math.min(start, end), Math.max(start, end) + 1).map(opt => opt.value);\n      if (e.target.checked) {\n        updatedSelected = [...new Set([...updatedSelected, ...range])];\n      } else {\n        updatedSelected = updatedSelected.filter(sel => !range.includes(sel));\n      }\n      setShiftSelected(range);\n    } else {\n      if (e.target.checked) {\n        updatedSelected.push(currency);\n      } else {\n        updatedSelected = updatedSelected.filter(sel => sel !== currency);\n      }\n      setShiftSelected([currency]);\n    }\n    setSelectedCurrencies(updatedSelected);\n  }, [selectedCurrencies, shiftSelected, setSelectedCurrencies, options]);\n\n  return (\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n      <DropdownToggle caret>\n        Select Currencies\n      </DropdownToggle>\n      <DropdownMenu>\n        {options.map(option => (\n          <DropdownItem key={option.value} toggle={false}>\n            <input\n              type=\"checkbox\"\n              checked={selectedCurrencies.includes(option.value)}\n              onChange={(e) => handleCheckboxChange(e, option.value)}\n            /> {option.label}\n          </DropdownItem>\n        ))}\n      </DropdownMenu>\n    </Dropdown>\n  );\n};\n\nexport default Selector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}