{"ast":null,"code":"var _jsxFileName = \"/Users/harshmishra/Desktop/dashboard/frontend/src/Components/Graph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport HighchartsBoost from 'highcharts/modules/boost';\nimport HighchartsExporting from 'highcharts/modules/exporting';\nimport HighchartsAnnotations from 'highcharts/modules/annotations';\nimport HighchartsMore from 'highcharts/highcharts-more';\nimport DataTable from 'react-data-table-component';\nimport DatePicker from 'react-datepicker';\nimport Select from 'react-select';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Topbar from './Topbar';\nimport '../Styles/Graph.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nHighchartsBoost(Highcharts);\nHighchartsExporting(Highcharts);\nHighchartsAnnotations(Highcharts);\nHighchartsMore(Highcharts);\nconst HighchartsGraph = () => {\n  _s();\n  const [compareWithTarget, setCompareWithTarget] = useState(false);\n  const [selectedCurrencies, setSelectedCurrencies] = useState([{\n    value: 'AUD',\n    label: 'AUD'\n  }]);\n  const [summary, setSummary] = useState('');\n  const [startDate, setStartDate] = useState(new Date('2022-06-01'));\n  const [endDate, setEndDate] = useState(new Date('2024-06-25'));\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const latestSummaryRef = useRef('');\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/brm/xva');\n        const result = await response.json();\n        setData(result);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const getFilteredData = () => {\n    return data.filter(d => {\n      const date = new Date(d.Date).getTime();\n      return date >= startDate.getTime() && date <= endDate.getTime();\n    });\n  };\n  useEffect(() => {\n    if (!loading && data.length > 0) {\n      const updateSummary = () => {\n        if (summary !== latestSummaryRef.current) {\n          setSummary(latestSummaryRef.current);\n        }\n      };\n      const interval = setInterval(updateSummary, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [loading, data, summary]);\n  const filteredData = getFilteredData();\n  const totalLine = {\n    name: 'Total',\n    data: filteredData.map(d => [new Date(d.Date).getTime(), d.Total]),\n    color: isDarkMode ? '#ffffff' : '#343a40',\n    marker: {\n      enabled: false\n    },\n    zIndex: 1,\n    boostThreshold: 1\n  };\n  const compareData = selectedCurrencies.map(currency => ({\n    name: currency.value,\n    data: filteredData.map(d => [new Date(d.Date).getTime(), d[currency.value]]),\n    color: getCurrencyColor(currency.value),\n    marker: {\n      enabled: false\n    },\n    boostThreshold: 1\n  }));\n  const handleTooltipFormatter = function () {\n    const points = this.points;\n    let targetValue = null;\n    let totalValue = null;\n    points.forEach(point => {\n      if (point.series.name === 'Target') {\n        targetValue = point.y;\n      }\n      if (point.series.name === 'Total') {\n        totalValue = point.y;\n      }\n    });\n    if (targetValue !== null && totalValue !== null) {\n      const difference = (totalValue - targetValue).toFixed(2);\n      const totalBreakdown = selectedCurrencies.map(currency => {\n        const point = points.find(p => p.series.name === currency.value);\n        return point ? `${currency.value}: ${point.y.toFixed(2)}` : `${currency.value}: N/A`;\n      }).join('<br>');\n      let summaryHTML = `<strong>Total: ${totalValue.toFixed(2)}</strong><br>`;\n      summaryHTML += `<strong>Target: ${targetValue.toFixed(2)}</strong><br>`;\n      summaryHTML += `Difference: ${difference}<br>`;\n      summaryHTML += `<strong>Breakdown of Selected Currencies:</strong><br>${totalBreakdown}`;\n      latestSummaryRef.current = summaryHTML;\n      return points.reduce((s, point) => {\n        return s + `<br><span style=\"color:${point.series.color}\">${point.series.name}</span>: ${point.y}`;\n      }, '');\n    }\n    return points.reduce((s, point) => {\n      return s + `<br><span style=\"color:${point.series.color}\">${point.series.name}</span>: ${point.y}`;\n    }, '');\n  };\n  const options = {\n    chart: {\n      type: 'line',\n      zoomType: 'x',\n      backgroundColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 1,\n          y2: 1\n        },\n        stops: [[0, isDarkMode ? '#444444' : '#cccccc'], [1, isDarkMode ? '#000000' : '#ffffff']]\n      }\n    },\n    title: {\n      text: 'LCH Notional',\n      style: {\n        color: isDarkMode ? '#ffffff' : '#000000',\n        fontSize: '22px',\n        fontWeight: 'bold'\n      }\n    },\n    xAxis: {\n      type: 'datetime',\n      title: {\n        text: 'Date',\n        style: {\n          color: isDarkMode ? '#cccccc' : '#000000',\n          fontSize: '14px',\n          fontWeight: 'bold'\n        }\n      },\n      lineColor: isDarkMode ? '#444444' : '#cccccc',\n      tickColor: isDarkMode ? '#444444' : '#cccccc',\n      labels: {\n        style: {\n          color: isDarkMode ? '#cccccc' : '#000000',\n          fontSize: '12px'\n        }\n      }\n    },\n    yAxis: {\n      title: {\n        text: 'Notional (USD)',\n        style: {\n          color: isDarkMode ? '#cccccc' : '#000000',\n          fontSize: '14px',\n          fontWeight: 'bold'\n        }\n      },\n      gridLineColor: isDarkMode ? '#444444' : '#cccccc',\n      labels: {\n        style: {\n          color: isDarkMode ? '#cccccc' : '#000000',\n          fontSize: '12px'\n        }\n      }\n    },\n    legend: {\n      layout: 'horizontal',\n      align: 'center',\n      verticalAlign: 'bottom',\n      itemStyle: {\n        color: isDarkMode ? '#ffffff' : '#000000',\n        fontSize: '14px',\n        fontWeight: 'bold'\n      },\n      itemHoverStyle: {\n        color: isDarkMode ? '#cccccc' : '#000000'\n      },\n      itemHiddenStyle: {\n        color: isDarkMode ? '#666666' : '#999999'\n      }\n    },\n    tooltip: {\n      shared: true,\n      backgroundColor: isDarkMode ? 'rgba(33, 33, 33, 0.85)' : 'rgba(255, 255, 255, 0.85)',\n      borderColor: isDarkMode ? '#666666' : '#cccccc',\n      style: {\n        color: isDarkMode ? '#ffffff' : '#000000'\n      },\n      formatter: handleTooltipFormatter\n    },\n    series: getData(),\n    navigation: {\n      buttonOptions: {\n        enabled: true,\n        theme: {\n          fill: isDarkMode ? '#444444' : '#f0f0f0',\n          stroke: isDarkMode ? '#666666' : '#cccccc',\n          style: {\n            color: isDarkMode ? '#ffffff' : '#000000'\n          },\n          states: {\n            hover: {\n              fill: isDarkMode ? '#555555' : '#e0e0e0',\n              style: {\n                color: isDarkMode ? '#ffffff' : '#000000'\n              }\n            },\n            select: {\n              fill: isDarkMode ? '#555555' : '#e0e0e0',\n              style: {\n                color: isDarkMode ? '#ffffff' : '#000000'\n              }\n            }\n          }\n        }\n      }\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          symbolStroke: isDarkMode ? '#cccccc' : '#000000',\n          theme: {\n            fill: isDarkMode ? '#444444' : '#f0f0f0'\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${isDarkMode ? 'dark-theme' : 'light-theme'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"floating-box-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"translucent-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Select Currencies to Include in Total:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              isMulti: true,\n              name: \"currencies\",\n              options: [{\n                value: 'AUD',\n                label: 'AUD'\n              }, {\n                value: 'EUR',\n                label: 'EUR'\n              }, {\n                value: 'GBP',\n                label: 'GBP'\n              }, {\n                value: 'JPY',\n                label: 'JPY'\n              }, {\n                value: 'USD',\n                label: 'USD'\n              }, {\n                value: 'BRL',\n                label: 'BRL'\n              }, {\n                value: 'CAD',\n                label: 'CAD'\n              }, {\n                value: 'CHF',\n                label: 'CHF'\n              }, {\n                value: 'CLP',\n                label: 'CLP'\n              }, {\n                value: 'CNY',\n                label: 'CNY'\n              }, {\n                value: 'CZK',\n                label: 'CZK'\n              }, {\n                value: 'DKK',\n                label: 'DKK'\n              }, {\n                value: 'HKD',\n                label: 'HKD'\n              }, {\n                value: 'HUF',\n                label: 'HUF'\n              }, {\n                value: 'INR',\n                label: 'INR'\n              }, {\n                value: 'KRW',\n                label: 'KRW'\n              }, {\n                value: 'MXN',\n                label: 'MXN'\n              }, {\n                value: 'NOK',\n                label: 'NOK'\n              }, {\n                value: 'NZD',\n                label: 'NZD'\n              }, {\n                value: 'PLN',\n                label: 'PLN'\n              }, {\n                value: 'SEK',\n                label: 'SEK'\n              }, {\n                value: 'SGD',\n                label: 'SGD'\n              }, {\n                value: 'THB',\n                label: 'THB'\n              }, {\n                value: 'TWD',\n                label: 'TWD'\n              }, {\n                value: 'ZAR',\n                label: 'ZAR'\n              }],\n              classNamePrefix: \"select\",\n              value: selectedCurrencies,\n              onChange: handleCurrencyChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Select Date Range:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: startDate,\n              onChange: date => setStartDate(date),\n              selectsStart: true,\n              startDate: startDate,\n              endDate: endDate,\n              className: \"date-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: endDate,\n              onChange: date => setEndDate(date),\n              selectsEnd: true,\n              startDate: startDate,\n              endDate: endDate,\n              className: \"date-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Graph Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCompareWithTarget(!compareWithTarget),\n              className: \"toggle-button\",\n              children: compareWithTarget ? 'Disable Compare with Target' : 'Enable Compare with Target'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"toggle-button\",\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => chartRef.current.chart.exportChart({\n                    type: 'image/png'\n                  }),\n                  children: \"PNG\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => chartRef.current.chart.exportChart({\n                    type: 'image/jpeg'\n                  }),\n                  children: \"JPEG\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => chartRef.current.chart.exportChart({\n                    type: 'application/pdf'\n                  }),\n                  children: \"PDF\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => chartRef.current.chart.exportChart({\n                    type: 'image/svg+xml'\n                  }),\n                  children: \"SVG\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsDarkMode(!isDarkMode),\n              className: \"toggle-button\",\n              children: \"Toggle Dark Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-panel\",\n        children: [/*#__PURE__*/_jsxDEV(HighchartsReact, {\n          highcharts: Highcharts,\n          options: options,\n          ref: chartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), compareWithTarget && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: summary\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-table-section\",\n          children: /*#__PURE__*/_jsxDEV(DataTable, {\n            title: \"LCH Notional | Summary Table\",\n            columns: getColumns(),\n            data: filteredData,\n            pagination: true,\n            highlightOnHover: true,\n            pointerOnHover: true,\n            customStyles: customTableStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n_s(HighchartsGraph, \"OECdRF+S7ISKtuSZ30b50B26K10=\");\n_c = HighchartsGraph;\nconst getCurrencyColor = currency => {\n  const colors = {\n    AUD: '#ff6f61',\n    EUR: '#28a745',\n    GBP: '#dc3545',\n    JPY: '#6f42c1',\n    USD: '#ffc107',\n    BRL: '#17a2b8',\n    CAD: '#20c997',\n    CHF: '#007bff',\n    CLP: '#6610f2',\n    CNY: '#e83e8c',\n    CZK: '#fd7e14',\n    DKK: '#343a40',\n    HKD: '#6c757d',\n    HUF: '#007bff',\n    INR: '#17a2b8',\n    KRW: '#6f42c1',\n    MXN: '#dc3545',\n    NOK: '#fd7e14',\n    NZD: '#28a745',\n    PLN: '#ffc107',\n    SEK: '#20c997',\n    SGD: '#e83e8c',\n    THB: '#6610f2',\n    TWD: '#6c757d',\n    ZAR: '#343a40'\n  };\n  return colors[currency] || '#000000';\n};\nconst getColumns = () => {\n  const baseColumns = [{\n    name: 'Date',\n    selector: row => row.Date,\n    sortable: true\n  }, {\n    name: 'Target',\n    selector: row => row.Target,\n    sortable: true\n  }];\n  const currencyColumns = selectedCurrencies.map(currency => ({\n    name: currency.label,\n    selector: row => row[currency.value],\n    sortable: true\n  }));\n  return [...baseColumns, ...currencyColumns, {\n    name: 'Total',\n    selector: row => row.Total,\n    sortable: true\n  }];\n};\nconst customTableStyles = {\n  header: {\n    style: {\n      fontSize: '22px',\n      fontWeight: 'bold',\n      color: 'var(--text-color)',\n      backgroundColor: 'var(--control-bg-color)'\n    }\n  },\n  rows: {\n    style: {\n      fontSize: '16px',\n      color: 'var(--text-color)',\n      backgroundColor: 'var(--input-bg-color)',\n      '&:not(:last-of-type)': {\n        borderBottomStyle: 'solid',\n        borderBottomWidth: '1px',\n        borderBottomColor: 'var(--control-bg-color)'\n      }\n    }\n  },\n  headCells: {\n    style: {\n      fontSize: '18px',\n      fontWeight: 'bold',\n      color: 'var(--text-color)',\n      backgroundColor: 'var(--control-bg-color)'\n    }\n  },\n  cells: {\n    style: {\n      fontSize: '16px',\n      color: 'var(--text-color)',\n      backgroundColor: 'var(--input-bg-color)'\n    }\n  }\n};\nexport default HighchartsGraph;\nvar _c;\n$RefreshReg$(_c, \"HighchartsGraph\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Highcharts","HighchartsReact","HighchartsBoost","HighchartsExporting","HighchartsAnnotations","HighchartsMore","DataTable","DatePicker","Select","Topbar","jsxDEV","_jsxDEV","HighchartsGraph","_s","compareWithTarget","setCompareWithTarget","selectedCurrencies","setSelectedCurrencies","value","label","summary","setSummary","startDate","setStartDate","Date","endDate","setEndDate","data","setData","loading","setLoading","isDarkMode","setIsDarkMode","latestSummaryRef","chartRef","fetchData","response","fetch","result","json","error","console","getFilteredData","filter","d","date","getTime","length","updateSummary","current","interval","setInterval","clearInterval","filteredData","totalLine","name","map","Total","color","marker","enabled","zIndex","boostThreshold","compareData","currency","getCurrencyColor","handleTooltipFormatter","points","targetValue","totalValue","forEach","point","series","y","difference","toFixed","totalBreakdown","find","p","join","summaryHTML","reduce","s","options","chart","type","zoomType","backgroundColor","linearGradient","x1","y1","x2","y2","stops","title","text","style","fontSize","fontWeight","xAxis","lineColor","tickColor","labels","yAxis","gridLineColor","legend","layout","align","verticalAlign","itemStyle","itemHoverStyle","itemHiddenStyle","tooltip","shared","borderColor","formatter","getData","navigation","buttonOptions","theme","fill","stroke","states","hover","select","exporting","buttons","contextButton","symbolStroke","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isMulti","classNamePrefix","onChange","handleCurrencyChange","selected","selectsStart","selectsEnd","onClick","exportChart","highcharts","ref","dangerouslySetInnerHTML","__html","columns","getColumns","pagination","highlightOnHover","pointerOnHover","customStyles","customTableStyles","_c","colors","AUD","EUR","GBP","JPY","USD","BRL","CAD","CHF","CLP","CNY","CZK","DKK","HKD","HUF","INR","KRW","MXN","NOK","NZD","PLN","SEK","SGD","THB","TWD","ZAR","baseColumns","selector","row","sortable","Target","currencyColumns","header","rows","borderBottomStyle","borderBottomWidth","borderBottomColor","headCells","cells","$RefreshReg$"],"sources":["/Users/harshmishra/Desktop/dashboard/frontend/src/Components/Graph.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport HighchartsBoost from 'highcharts/modules/boost';\nimport HighchartsExporting from 'highcharts/modules/exporting';\nimport HighchartsAnnotations from 'highcharts/modules/annotations';\nimport HighchartsMore from 'highcharts/highcharts-more';\nimport DataTable from 'react-data-table-component';\nimport DatePicker from 'react-datepicker';\nimport Select from 'react-select';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Topbar from './Topbar';\nimport '../Styles/Graph.css';\n\nHighchartsBoost(Highcharts);\nHighchartsExporting(Highcharts);\nHighchartsAnnotations(Highcharts);\nHighchartsMore(Highcharts);\n\nconst HighchartsGraph = () => {\n  const [compareWithTarget, setCompareWithTarget] = useState(false);\n  const [selectedCurrencies, setSelectedCurrencies] = useState([\n    { value: 'AUD', label: 'AUD' },\n  ]);\n  const [summary, setSummary] = useState('');\n  const [startDate, setStartDate] = useState(new Date('2022-06-01'));\n  const [endDate, setEndDate] = useState(new Date('2024-06-25'));\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const latestSummaryRef = useRef('');\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/brm/xva');\n        const result = await response.json();\n        setData(result);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const getFilteredData = () => {\n    return data.filter((d) => {\n      const date = new Date(d.Date).getTime();\n      return date >= startDate.getTime() && date <= endDate.getTime();\n    });\n  };\n\n  useEffect(() => {\n    if (!loading && data.length > 0) {\n      const updateSummary = () => {\n        if (summary !== latestSummaryRef.current) {\n          setSummary(latestSummaryRef.current);\n        }\n      };\n\n      const interval = setInterval(updateSummary, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [loading, data, summary]);\n\n  const filteredData = getFilteredData();\n\n  const totalLine = {\n    name: 'Total',\n    data: filteredData.map((d) => [new Date(d.Date).getTime(), d.Total]),\n    color: isDarkMode ? '#ffffff' : '#343a40',\n    marker: { enabled: false },\n    zIndex: 1,\n    boostThreshold: 1,\n  };\n\n  const compareData = selectedCurrencies.map((currency) => ({\n    name: currency.value,\n    data: filteredData.map((d) => [new Date(d.Date).getTime(), d[currency.value]]),\n    color: getCurrencyColor(currency.value),\n    marker: { enabled: false },\n    boostThreshold: 1,\n  }));\n\n  const handleTooltipFormatter = function () {\n    const points = this.points;\n    let targetValue = null;\n    let totalValue = null;\n\n    points.forEach((point) => {\n      if (point.series.name === 'Target') {\n        targetValue = point.y;\n      }\n      if (point.series.name === 'Total') {\n        totalValue = point.y;\n      }\n    });\n\n    if (targetValue !== null && totalValue !== null) {\n      const difference = (totalValue - targetValue).toFixed(2);\n      const totalBreakdown = selectedCurrencies\n        .map((currency) => {\n          const point = points.find((p) => p.series.name === currency.value);\n          return point ? `${currency.value}: ${point.y.toFixed(2)}` : `${currency.value}: N/A`;\n        })\n        .join('<br>');\n\n      let summaryHTML = `<strong>Total: ${totalValue.toFixed(2)}</strong><br>`;\n      summaryHTML += `<strong>Target: ${targetValue.toFixed(2)}</strong><br>`;\n      summaryHTML += `Difference: ${difference}<br>`;\n      summaryHTML += `<strong>Breakdown of Selected Currencies:</strong><br>${totalBreakdown}`;\n\n      latestSummaryRef.current = summaryHTML;\n      return points.reduce((s, point) => {\n        return (\n          s +\n          `<br><span style=\"color:${point.series.color}\">${point.series.name}</span>: ${point.y}`\n        );\n      }, '');\n    }\n    return points.reduce((s, point) => {\n      return (\n        s +\n        `<br><span style=\"color:${point.series.color}\">${point.series.name}</span>: ${point.y}`\n      );\n    }, '');\n  };\n\n  const options = {\n    chart: {\n      type: 'line',\n      zoomType: 'x',\n      backgroundColor: {\n        linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n        stops: [\n          [0, isDarkMode ? '#444444' : '#cccccc'],\n          [1, isDarkMode ? '#000000' : '#ffffff'],\n        ],\n      },\n    },\n    title: {\n      text: 'LCH Notional',\n      style: {\n        color: isDarkMode ? '#ffffff' : '#000000',\n        fontSize: '22px',\n        fontWeight: 'bold',\n      },\n    },\n    xAxis: {\n      type: 'datetime',\n      title: {\n        text: 'Date',\n        style: {\n          color: isDarkMode ? '#cccccc' : '#000000',\n          fontSize: '14px',\n          fontWeight: 'bold',\n        },\n      },\n      lineColor: isDarkMode ? '#444444' : '#cccccc',\n      tickColor: isDarkMode ? '#444444' : '#cccccc',\n      labels: {\n        style: {\n          color: isDarkMode ? '#cccccc' : '#000000',\n          fontSize: '12px',\n        },\n      },\n    },\n    yAxis: {\n      title: {\n        text: 'Notional (USD)',\n        style: {\n          color: isDarkMode ? '#cccccc' : '#000000',\n          fontSize: '14px',\n          fontWeight: 'bold',\n        },\n      },\n      gridLineColor: isDarkMode ? '#444444' : '#cccccc',\n      labels: {\n        style: {\n          color: isDarkMode ? '#cccccc' : '#000000',\n          fontSize: '12px',\n        },\n      },\n    },\n    legend: {\n      layout: 'horizontal',\n      align: 'center',\n      verticalAlign: 'bottom',\n      itemStyle: {\n        color: isDarkMode ? '#ffffff' : '#000000',\n        fontSize: '14px',\n        fontWeight: 'bold',\n      },\n      itemHoverStyle: {\n        color: isDarkMode ? '#cccccc' : '#000000',\n      },\n      itemHiddenStyle: {\n        color: isDarkMode ? '#666666' : '#999999',\n      },\n    },\n    tooltip: {\n      shared: true,\n      backgroundColor: isDarkMode\n        ? 'rgba(33, 33, 33, 0.85)'\n        : 'rgba(255, 255, 255, 0.85)',\n      borderColor: isDarkMode ? '#666666' : '#cccccc',\n      style: {\n        color: isDarkMode ? '#ffffff' : '#000000',\n      },\n      formatter: handleTooltipFormatter,\n    },\n    series: getData(),\n    navigation: {\n      buttonOptions: {\n        enabled: true,\n        theme: {\n          fill: isDarkMode ? '#444444' : '#f0f0f0',\n          stroke: isDarkMode ? '#666666' : '#cccccc',\n          style: {\n            color: isDarkMode ? '#ffffff' : '#000000',\n          },\n          states: {\n            hover: {\n              fill: isDarkMode ? '#555555' : '#e0e0e0',\n              style: {\n                color: isDarkMode ? '#ffffff' : '#000000',\n              },\n            },\n            select: {\n              fill: isDarkMode ? '#555555' : '#e0e0e0',\n              style: {\n                color: isDarkMode ? '#ffffff' : '#000000',\n              },\n            },\n          },\n        },\n      },\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          symbolStroke: isDarkMode ? '#cccccc' : '#000000',\n          theme: {\n            fill: isDarkMode ? '#444444' : '#f0f0f0',\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <div className={`app-container ${isDarkMode ? 'dark-theme' : 'light-theme'}`}>\n      <div className=\"app-container\">\n        <Topbar />\n        <div className=\"floating-box-container\">\n          <div className=\"translucent-box\">\n            <div className=\"control-group\">\n              <h2>Select Currencies to Include in Total:</h2>\n              <Select\n                isMulti\n                name=\"currencies\"\n                options={[\n                  { value: 'AUD', label: 'AUD' },\n                  { value: 'EUR', label: 'EUR' },\n                  { value: 'GBP', label: 'GBP' },\n                  { value: 'JPY', label: 'JPY' },\n                  { value: 'USD', label: 'USD' },\n                  { value: 'BRL', label: 'BRL' },\n                  { value: 'CAD', label: 'CAD' },\n                  { value: 'CHF', label: 'CHF' },\n                  { value: 'CLP', label: 'CLP' },\n                  { value: 'CNY', label: 'CNY' },\n                  { value: 'CZK', label: 'CZK' },\n                  { value: 'DKK', label: 'DKK' },\n                  { value: 'HKD', label: 'HKD' },\n                  { value: 'HUF', label: 'HUF' },\n                  { value: 'INR', label: 'INR' },\n                  { value: 'KRW', label: 'KRW' },\n                  { value: 'MXN', label: 'MXN' },\n                  { value: 'NOK', label: 'NOK' },\n                  { value: 'NZD', label: 'NZD' },\n                  { value: 'PLN', label: 'PLN' },\n                  { value: 'SEK', label: 'SEK' },\n                  { value: 'SGD', label: 'SGD' },\n                  { value: 'THB', label: 'THB' },\n                  { value: 'TWD', label: 'TWD' },\n                  { value: 'ZAR', label: 'ZAR' },\n                ]}\n                classNamePrefix=\"select\"\n                value={selectedCurrencies}\n                onChange={handleCurrencyChange}\n              />\n            </div>\n            <div className=\"control-group\">\n              <h2>Select Date Range:</h2>\n              <DatePicker\n                selected={startDate}\n                onChange={(date) => setStartDate(date)}\n                selectsStart\n                startDate={startDate}\n                endDate={endDate}\n                className=\"date-input\"\n              />\n              <DatePicker\n                selected={endDate}\n                onChange={(date) => setEndDate(date)}\n                selectsEnd\n                startDate={startDate}\n                endDate={endDate}\n                className=\"date-input\"\n              />\n            </div>\n            <div className=\"control-group\">\n              <h2>Graph Options</h2>\n              <button onClick={() => setCompareWithTarget(!compareWithTarget)} className=\"toggle-button\">\n                {compareWithTarget ? 'Disable Compare with Target' : 'Enable Compare with Target'}\n              </button>\n              <div className=\"dropdown\">\n                <button className=\"toggle-button\">Download</button>\n                <div className=\"dropdown-content\">\n                  <button onClick={() => chartRef.current.chart.exportChart({ type: 'image/png' })}>PNG</button>\n                  <button onClick={() => chartRef.current.chart.exportChart({ type: 'image/jpeg' })}>JPEG</button>\n                  <button onClick={() => chartRef.current.chart.exportChart({ type: 'application/pdf' })}>PDF</button>\n                  <button onClick={() => chartRef.current.chart.exportChart({ type: 'image/svg+xml' })}>SVG</button>\n                </div>\n              </div>\n              <button onClick={() => setIsDarkMode(!isDarkMode)} className=\"toggle-button\">\n                Toggle Dark Mode\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"main-panel\">\n          <HighchartsReact highcharts={Highcharts} options={options} ref={chartRef} />\n          {compareWithTarget && (\n            <div className=\"summary-box\">\n              <h3>Summary</h3>\n              <div dangerouslySetInnerHTML={{ __html: summary }} />\n            </div>\n          )}\n          <div className=\"data-table-section\">\n            <DataTable\n              title=\"LCH Notional | Summary Table\"\n              columns={getColumns()}\n              data={filteredData}\n              pagination\n              highlightOnHover\n              pointerOnHover\n              customStyles={customTableStyles}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst getCurrencyColor = (currency) => {\n  const colors = {\n    AUD: '#ff6f61',\n    EUR: '#28a745',\n    GBP: '#dc3545',\n    JPY: '#6f42c1',\n    USD: '#ffc107',\n    BRL: '#17a2b8',\n    CAD: '#20c997',\n    CHF: '#007bff',\n    CLP: '#6610f2',\n    CNY: '#e83e8c',\n    CZK: '#fd7e14',\n    DKK: '#343a40',\n    HKD: '#6c757d',\n    HUF: '#007bff',\n    INR: '#17a2b8',\n    KRW: '#6f42c1',\n    MXN: '#dc3545',\n    NOK: '#fd7e14',\n    NZD: '#28a745',\n    PLN: '#ffc107',\n    SEK: '#20c997',\n    SGD: '#e83e8c',\n    THB: '#6610f2',\n    TWD: '#6c757d',\n    ZAR: '#343a40',\n  };\n  return colors[currency] || '#000000';\n};\n\nconst getColumns = () => {\n  const baseColumns = [\n    { name: 'Date', selector: (row) => row.Date, sortable: true },\n    { name: 'Target', selector: (row) => row.Target, sortable: true },\n  ];\n\n  const currencyColumns = selectedCurrencies.map((currency) => ({\n    name: currency.label,\n    selector: (row) => row[currency.value],\n    sortable: true,\n  }));\n\n  return [...baseColumns, ...currencyColumns, { name: 'Total', selector: (row) => row.Total, sortable: true }];\n};\n\nconst customTableStyles = {\n  header: {\n    style: {\n      fontSize: '22px',\n      fontWeight: 'bold',\n      color: 'var(--text-color)',\n      backgroundColor: 'var(--control-bg-color)',\n    },\n  },\n  rows: {\n    style: {\n      fontSize: '16px',\n      color: 'var(--text-color)',\n      backgroundColor: 'var(--input-bg-color)',\n      '&:not(:last-of-type)': {\n        borderBottomStyle: 'solid',\n        borderBottomWidth: '1px',\n        borderBottomColor: 'var(--control-bg-color)',\n      },\n    },\n  },\n  headCells: {\n    style: {\n      fontSize: '18px',\n      fontWeight: 'bold',\n      color: 'var(--text-color)',\n      backgroundColor: 'var(--control-bg-color)',\n    },\n  },\n  cells: {\n    style: {\n      fontSize: '16px',\n      color: 'var(--text-color)',\n      backgroundColor: 'var(--input-bg-color)',\n    },\n  },\n};\n\nexport default HighchartsGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}