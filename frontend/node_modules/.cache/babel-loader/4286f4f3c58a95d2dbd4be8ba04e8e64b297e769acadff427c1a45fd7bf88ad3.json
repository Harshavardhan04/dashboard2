{"ast":null,"code":"var _jsxFileName = \"/Users/harshmishra/Desktop/dashboard/frontend/src/Components/Graph_component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport HighchartsBoost from \"highcharts/modules/boost\";\nimport HighchartsExporting from \"highcharts/modules/exporting\";\nimport HighchartsAnnotations from \"highcharts/modules/annotations\";\nimport HighchartsMore from \"highcharts/highcharts-more\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Selector from \"./Selector\";\nimport \"../Styles/Graph.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nHighchartsBoost(Highcharts);\nHighchartsExporting(Highcharts);\nHighchartsAnnotations(Highcharts);\nHighchartsMore(Highcharts);\nconst Graph = ({\n  isDarkMode,\n  selectedCurrencies,\n  setSelectedCurrencies,\n  startDate,\n  setStartDate,\n  endDate,\n  setEndDate,\n  data\n}) => {\n  _s();\n  const [compareWithTarget, setCompareWithTarget] = useState(false);\n  const [summary, setSummary] = useState(\"\");\n  const latestSummaryRef = useRef(\"\");\n  const chartRef = useRef(null);\n  const getFilteredData = () => {\n    return data.filter(d => {\n      const date = new Date(d.Date).getTime();\n      return date >= startDate.getTime() && date <= endDate.getTime();\n    });\n  };\n  const filteredData = getFilteredData();\n  const totalLine = {\n    name: \"Total\",\n    data: filteredData.map(d => [new Date(d.Date).getTime(), d.Total]),\n    color: isDarkMode ? \"#007bff\" : \"#343a40\",\n    marker: {\n      enabled: false\n    },\n    zIndex: 1,\n    boostThreshold: 1\n  };\n  const shadeData = {\n    name: \"Shaded Area\",\n    data: filteredData.map(d => ({\n      x: new Date(d.Date).getTime(),\n      low: Math.min(d.Total, d.Target),\n      high: Math.max(d.Total, d.Target)\n    })),\n    type: \"arearange\",\n    lineWidth: 0,\n    linkedTo: \"Total\",\n    color: \"#2E8C39\",\n    fillOpacity: 0.3,\n    zIndex: 0,\n    marker: {\n      enabled: false\n    },\n    boostThreshold: 0,\n    boost: false\n  };\n  const getData = () => {\n    const compareData = [...selectedCurrencies.map(currency => ({\n      name: currency.value,\n      data: filteredData.map(d => [new Date(d.Date).getTime(), d[currency.value]]),\n      color: getCurrencyColor(currency.value),\n      marker: {\n        enabled: false\n      },\n      boostThreshold: 1\n    })), totalLine, {\n      name: \"Target\",\n      data: filteredData.map(d => [new Date(d.Date).getTime(), d.Target]),\n      color: \"#007bff\",\n      marker: {\n        enabled: false\n      },\n      zIndex: 1,\n      boostThreshold: 1\n    }, shadeData];\n    return compareWithTarget ? compareData : compareData.slice(0, -1);\n  };\n  const getCurrencyColor = currency => {\n    switch (currency) {\n      case \"AUD\":\n        return \"#FFD700\";\n      case \"EUR\":\n        return \"#FF6347\";\n      case \"GBP\":\n        return \"#4682B4\";\n      case \"JPY\":\n        return \"#32CD32\";\n      case \"USD\":\n        return \"#FFA07A\";\n      case \"BRL\":\n        return \"#9400D3\";\n      case \"CAD\":\n        return \"#00FF00\";\n      case \"CHF\":\n        return \"#FF00FF\";\n      case \"CLP\":\n        return \"#00FFFF\";\n      case \"CNY\":\n        return \"#FF4500\";\n      case \"CZK\":\n        return \"#FF1493\";\n      case \"DKK\":\n        return \"#1E90FF\";\n      case \"HKD\":\n        return \"#FF69B4\";\n      case \"HUF\":\n        return \"#8A2BE2\";\n      case \"INR\":\n        return \"#00BFFF\";\n      case \"KRW\":\n        return \"#7B68EE\";\n      case \"NOK\":\n        return \"#FFD700\";\n      case \"NZD\":\n        return \"#FF6347\";\n      case \"PLN\":\n        return \"#4682B4\";\n      case \"SEK\":\n        return \"#32CD32\";\n      case \"SGD\":\n        return \"#FFA07A\";\n      case \"THB\":\n        return \"#9400D3\";\n      case \"TWD\":\n        return \"#00FF00\";\n      case \"ZAR\":\n        return \"#FF00FF\";\n      default:\n        return \"#FF4500\";\n    }\n  };\n  const formatNumber = number => {\n    return new Intl.NumberFormat('en-US', {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(number);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"graph-title\",\n      children: \"LCH Notional | Time Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectors-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currency-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Currencies:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Selector, {\n          options: [{\n            value: \"AUD\",\n            label: \"AUD\"\n          }, {\n            value: \"EUR\",\n            label: \"EUR\"\n          }, {\n            value: \"GBP\",\n            label: \"GBP\"\n          }, {\n            value: \"JPY\",\n            label: \"JPY\"\n          }, {\n            value: \"USD\",\n            label: \"USD\"\n          }, {\n            value: \"BRL\",\n            label: \"BRL\"\n          }, {\n            value: \"CAD\",\n            label: \"CAD\"\n          }, {\n            value: \"CHF\",\n            label: \"CHF\"\n          }, {\n            value: \"CLP\",\n            label: \"CLP\"\n          }, {\n            value: \"CNY\",\n            label: \"CNY\"\n          }, {\n            value: \"CZK\",\n            label: \"CZK\"\n          }, {\n            value: \"DKK\",\n            label: \"DKK\"\n          }, {\n            value: \"HKD\",\n            label: \"HKD\"\n          }, {\n            value: \"HUF\",\n            label: \"HUF\"\n          }, {\n            value: \"INR\",\n            label: \"INR\"\n          }, {\n            value: \"KRW\",\n            label: \"KRW\"\n          }, {\n            value: \"MXN\",\n            label: \"MXN\"\n          }, {\n            value: \"NOK\",\n            label: \"NOK\"\n          }, {\n            value: \"NZD\",\n            label: \"NZD\"\n          }, {\n            value: \"PLN\",\n            label: \"PLN\"\n          }, {\n            value: \"SEK\",\n            label: \"SEK\"\n          }, {\n            value: \"SGD\",\n            label: \"SGD\"\n          }, {\n            value: \"THB\",\n            label: \"THB\"\n          }, {\n            value: \"TWD\",\n            label: \"TWD\"\n          }, {\n            value: \"ZAR\",\n            label: \"ZAR\"\n          }],\n          selectedCurrencies: selectedCurrencies,\n          setSelectedCurrencies: setSelectedCurrencies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Date Range:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: startDate,\n          onChange: date => setStartDate(date),\n          selectsStart: true,\n          startDate: startDate,\n          endDate: endDate,\n          className: \"date-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: endDate,\n          onChange: date => setEndDate(date),\n          selectsEnd: true,\n          startDate: startDate,\n          endDate: endDate,\n          minDate: startDate,\n          className: \"date-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-panel\",\n      children: [/*#__PURE__*/_jsxDEV(HighchartsReact, {\n        className: \"chart-actual\",\n        highcharts: Highcharts,\n        options: {\n          chart: {\n            type: \"line\",\n            zoomType: \"x\",\n            backgroundColor: {\n              linearGradient: {\n                x1: 0,\n                y1: 0,\n                x2: 1,\n                y2: 1\n              },\n              stops: isDarkMode ? [[0, \"#2e2e2e\"], [1, \"#1a1a1a\"]] : [[0, \"#ffffff\"], [1, \"#f0f0f0\"]]\n            },\n            borderRadius: 10,\n            // Rounded corners\n            style: {\n              fontFamily: \"Helvetica, Arial, sans-serif\" // Font style for the chart\n            },\n            plotBorderColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n            plotBorderWidth: 1,\n            events: {\n              load: function () {\n                this.xAxis[0].setExtremes(startDate.getTime(), endDate.getTime());\n              }\n            },\n            boost: {\n              useGPUTranslations: true,\n              usePreAllocated: true\n            }\n          },\n          title: {\n            text: \"\",\n            style: {\n              color: isDarkMode ? \"#ffffff\" : \"#000000\",\n              fontSize: \"22px\",\n              fontWeight: \"bold\"\n            }\n          },\n          xAxis: {\n            type: \"datetime\",\n            title: {\n              text: \"Date\",\n              style: {\n                color: isDarkMode ? \"#cccccc\" : \"#000000\",\n                fontSize: \"14px\",\n                fontWeight: \"bold\"\n              }\n            },\n            lineColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n            tickColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n            labels: {\n              style: {\n                color: isDarkMode ? \"#cccccc\" : \"#000000\",\n                fontSize: \"12px\"\n              }\n            }\n          },\n          yAxis: {\n            title: {\n              text: \"Notional (USD)\",\n              style: {\n                color: isDarkMode ? \"#cccccc\" : \"#000000\",\n                fontSize: \"14px\",\n                fontWeight: \"bold\"\n              }\n            },\n            gridLineColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n            labels: {\n              style: {\n                color: isDarkMode ? \"#cccccc\" : \"#000000\",\n                fontSize: \"12px\"\n              }\n            }\n          },\n          legend: {\n            layout: \"horizontal\",\n            align: \"center\",\n            verticalAlign: \"bottom\",\n            itemStyle: {\n              color: isDarkMode ? \"#ffffff\" : \"#000000\",\n              fontSize: \"14px\",\n              fontWeight: \"bold\"\n            },\n            itemHoverStyle: {\n              color: isDarkMode ? \"#cccccc\" : \"#000000\"\n            },\n            itemHiddenStyle: {\n              color: isDarkMode ? \"#666666\" : \"#999999\"\n            }\n          },\n          tooltip: {\n            shared: true,\n            backgroundColor: isDarkMode ? \"rgba(33, 33, 33, 0.85)\" : \"rgba(255, 255, 255, 0.85)\",\n            borderColor: isDarkMode ? \"#666666\" : \"#cccccc\",\n            style: {\n              color: isDarkMode ? \"#ffffff\" : \"#000000\"\n            },\n            formatter: function () {\n              const points = this.points;\n              let targetValue = null;\n              let totalValue = null;\n              points.forEach(point => {\n                if (point.series.name === \"Target\") {\n                  targetValue = point.y;\n                }\n                if (point.series.name === \"Total\") {\n                  totalValue = point.y;\n                }\n              });\n              if (targetValue !== null && totalValue !== null) {\n                const difference = formatNumber(totalValue - targetValue);\n                const totalBreakdown = selectedCurrencies.map(currency => {\n                  const point = points.find(p => p.series.name === currency.value);\n                  return point ? `${currency.value}: ${formatNumber(point.y)}` : `${currency.value}: N/A`;\n                }).join(\"<br>\");\n                let summaryHTML = `<strong>Total: ${formatNumber(totalValue)}</strong><br>`;\n                summaryHTML += `<strong>Target: ${formatNumber(targetValue)}</strong><br>`;\n                summaryHTML += `Difference: ${difference}<br><br>`;\n                summaryHTML += `<strong>Breakdown of Selected Currencies:</strong><br>${totalBreakdown}`;\n                latestSummaryRef.current = summaryHTML;\n                return points.reduce((s, point) => {\n                  return s + `<br><span style=\"color:${point.series.color}\">${point.series.name}</span>: ${formatNumber(point.y)}`;\n                }, `<b>${Highcharts.dateFormat(\"%A, %b %e, %Y\", this.x)}</b>`);\n              }\n              return points.reduce((s, point) => {\n                return s + `<br><span style=\"color:${point.series.color}\">${point.series.name}</span>: ${formatNumber(point.y)}`;\n              }, `<b>${Highcharts.dateFormat(\"%A, %b %e, %Y\", this.x)}</b>`);\n            }\n          },\n          series: getData(),\n          navigation: {\n            buttonOptions: {\n              enabled: true,\n              theme: {\n                fill: isDarkMode ? \"#444444\" : \"#f0f0f0\",\n                stroke: isDarkMode ? \"#666666\" : \"#cccccc\",\n                style: {\n                  color: isDarkMode ? \"#ffffff\" : \"#000000\"\n                }\n              }\n            }\n          },\n          exporting: {\n            buttons: {\n              contextButton: {\n                symbolStroke: isDarkMode ? \"#cccccc\" : \"#000000\",\n                theme: {\n                  fill: isDarkMode ? \"#444444\" : \"#f0f0f0\"\n                }\n              }\n            }\n          }\n        },\n        containerProps: {\n          className: \"chart-container\"\n        },\n        updateArgs: [true, true, true],\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), compareWithTarget && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: summary\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-right-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCompareWithTarget(!compareWithTarget),\n          className: \"toggle-button\",\n          children: compareWithTarget ? \"Disable Compare with Target\" : \"Enable Compare with Target\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"download-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"toggle-button\",\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => chartRef.current.chart.exportChart({\n                type: \"image/png\"\n              }),\n              children: \"PNG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => chartRef.current.chart.exportChart({\n                type: \"image/jpeg\"\n              }),\n              children: \"JPEG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => chartRef.current.chart.exportChart({\n                type: \"application/pdf\"\n              }),\n              children: \"PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => chartRef.current.chart.exportChart({\n                type: \"image/svg+xml\"\n              }),\n              children: \"SVG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"jfUt/IWm10zHf449d7nG0YxsseA=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Highcharts","HighchartsReact","HighchartsBoost","HighchartsExporting","HighchartsAnnotations","HighchartsMore","DatePicker","Selector","jsxDEV","_jsxDEV","Graph","isDarkMode","selectedCurrencies","setSelectedCurrencies","startDate","setStartDate","endDate","setEndDate","data","_s","compareWithTarget","setCompareWithTarget","summary","setSummary","latestSummaryRef","chartRef","getFilteredData","filter","d","date","Date","getTime","filteredData","totalLine","name","map","Total","color","marker","enabled","zIndex","boostThreshold","shadeData","x","low","Math","min","Target","high","max","type","lineWidth","linkedTo","fillOpacity","boost","getData","compareData","currency","value","getCurrencyColor","slice","formatNumber","number","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","label","selected","onChange","selectsStart","selectsEnd","minDate","highcharts","chart","zoomType","backgroundColor","linearGradient","x1","y1","x2","y2","stops","borderRadius","style","fontFamily","plotBorderColor","plotBorderWidth","events","load","xAxis","setExtremes","useGPUTranslations","usePreAllocated","title","text","fontSize","fontWeight","lineColor","tickColor","labels","yAxis","gridLineColor","legend","layout","align","verticalAlign","itemStyle","itemHoverStyle","itemHiddenStyle","tooltip","shared","borderColor","formatter","points","targetValue","totalValue","forEach","point","series","y","difference","totalBreakdown","find","p","join","summaryHTML","current","reduce","s","dateFormat","navigation","buttonOptions","theme","fill","stroke","exporting","buttons","contextButton","symbolStroke","containerProps","updateArgs","ref","dangerouslySetInnerHTML","__html","onClick","exportChart","_c","$RefreshReg$"],"sources":["/Users/harshmishra/Desktop/dashboard/frontend/src/Components/Graph_component.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport HighchartsBoost from \"highcharts/modules/boost\";\nimport HighchartsExporting from \"highcharts/modules/exporting\";\nimport HighchartsAnnotations from \"highcharts/modules/annotations\";\nimport HighchartsMore from \"highcharts/highcharts-more\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Selector from \"./Selector\";\nimport \"../Styles/Graph.css\";\n\nHighchartsBoost(Highcharts);\nHighchartsExporting(Highcharts);\nHighchartsAnnotations(Highcharts);\nHighchartsMore(Highcharts);\n\nconst Graph = ({ isDarkMode, selectedCurrencies, setSelectedCurrencies, startDate, setStartDate, endDate, setEndDate, data }) => {\n  const [compareWithTarget, setCompareWithTarget] = useState(false);\n  const [summary, setSummary] = useState(\"\");\n  const latestSummaryRef = useRef(\"\");\n  const chartRef = useRef(null);\n\n  const getFilteredData = () => {\n    return data.filter((d) => {\n      const date = new Date(d.Date).getTime();\n      return date >= startDate.getTime() && date <= endDate.getTime();\n    });\n  };\n\n  const filteredData = getFilteredData();\n\n  const totalLine = {\n    name: \"Total\",\n    data: filteredData.map((d) => [new Date(d.Date).getTime(), d.Total]),\n    color: isDarkMode ? \"#007bff\" : \"#343a40\",\n    marker: { enabled: false },\n    zIndex: 1,\n    boostThreshold: 1,\n  };\n\n  const shadeData = {\n    name: \"Shaded Area\",\n    data: filteredData.map((d) => ({\n      x: new Date(d.Date).getTime(),\n      low: Math.min(d.Total, d.Target),\n      high: Math.max(d.Total, d.Target),\n    })),\n    type: \"arearange\",\n    lineWidth: 0,\n    linkedTo: \"Total\",\n    color: \"#2E8C39\",\n    fillOpacity: 0.3,\n    zIndex: 0,\n    marker: { enabled: false },\n    boostThreshold: 0,\n    boost: false,\n  };\n\n  const getData = () => {\n    const compareData = [\n      ...selectedCurrencies.map((currency) => ({\n        name: currency.value,\n        data: filteredData.map((d) => [\n          new Date(d.Date).getTime(),\n          d[currency.value],\n        ]),\n        color: getCurrencyColor(currency.value),\n        marker: { enabled: false },\n        boostThreshold: 1,\n      })),\n      totalLine,\n      {\n        name: \"Target\",\n        data: filteredData.map((d) => [new Date(d.Date).getTime(), d.Target]),\n        color: \"#007bff\",\n        marker: { enabled: false },\n        zIndex: 1,\n        boostThreshold: 1,\n      },\n      shadeData,\n    ];\n    return compareWithTarget ? compareData : compareData.slice(0, -1);\n  };\n\n  const getCurrencyColor = (currency) => {\n    switch (currency) {\n      case \"AUD\":\n        return \"#FFD700\";\n      case \"EUR\":\n        return \"#FF6347\";\n      case \"GBP\":\n        return \"#4682B4\";\n      case \"JPY\":\n        return \"#32CD32\";\n      case \"USD\":\n        return \"#FFA07A\";\n      case \"BRL\":\n        return \"#9400D3\";\n      case \"CAD\":\n        return \"#00FF00\";\n      case \"CHF\":\n        return \"#FF00FF\";\n      case \"CLP\":\n        return \"#00FFFF\";\n      case \"CNY\":\n        return \"#FF4500\";\n      case \"CZK\":\n        return \"#FF1493\";\n      case \"DKK\":\n        return \"#1E90FF\";\n      case \"HKD\":\n        return \"#FF69B4\";\n      case \"HUF\":\n        return \"#8A2BE2\";\n      case \"INR\":\n        return \"#00BFFF\";\n      case \"KRW\":\n        return \"#7B68EE\";\n      case \"NOK\":\n        return \"#FFD700\";\n      case \"NZD\":\n        return \"#FF6347\";\n      case \"PLN\":\n        return \"#4682B4\";\n      case \"SEK\":\n        return \"#32CD32\";\n      case \"SGD\":\n        return \"#FFA07A\";\n      case \"THB\":\n        return \"#9400D3\";\n      case \"TWD\":\n        return \"#00FF00\";\n      case \"ZAR\":\n        return \"#FF00FF\";\n      default:\n        return \"#FF4500\";\n    }\n  };\n\n  const formatNumber = (number) => {\n    return new Intl.NumberFormat('en-US', {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(number);\n  };\n\n  return (\n    <div className=\"graph-container\">\n      <h2 className=\"graph-title\">LCH Notional | Time Series</h2>\n      <div className=\"selectors-container\">\n        <div className=\"currency-selector\">\n          <label>Select Currencies:</label>\n          <Selector\n            options={[\n              { value: \"AUD\", label: \"AUD\" },\n              { value: \"EUR\", label: \"EUR\" },\n              { value: \"GBP\", label: \"GBP\" },\n              { value: \"JPY\", label: \"JPY\" },\n              { value: \"USD\", label: \"USD\" },\n              { value: \"BRL\", label: \"BRL\" },\n              { value: \"CAD\", label: \"CAD\" },\n              { value: \"CHF\", label: \"CHF\" },\n              { value: \"CLP\", label: \"CLP\" },\n              { value: \"CNY\", label: \"CNY\" },\n              { value: \"CZK\", label: \"CZK\" },\n              { value: \"DKK\", label: \"DKK\" },\n              { value: \"HKD\", label: \"HKD\" },\n              { value: \"HUF\", label: \"HUF\" },\n              { value: \"INR\", label: \"INR\" },\n              { value: \"KRW\", label: \"KRW\" },\n              { value: \"MXN\", label: \"MXN\" },\n              { value: \"NOK\", label: \"NOK\" },\n              { value: \"NZD\", label: \"NZD\" },\n              { value: \"PLN\", label: \"PLN\" },\n              { value: \"SEK\", label: \"SEK\" },\n              { value: \"SGD\", label: \"SGD\" },\n              { value: \"THB\", label: \"THB\" },\n              { value: \"TWD\", label: \"TWD\" },\n              { value: \"ZAR\", label: \"ZAR\" },\n            ]}\n            selectedCurrencies={selectedCurrencies}\n            setSelectedCurrencies={setSelectedCurrencies}\n          />\n        </div>\n        <div className=\"date-picker\">\n          <label>Select Date Range:</label>\n          <DatePicker\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n            selectsStart\n            startDate={startDate}\n            endDate={endDate}\n            className=\"date-input\"\n          />\n          <DatePicker\n            selected={endDate}\n            onChange={(date) => setEndDate(date)}\n            selectsEnd\n            startDate={startDate}\n            endDate={endDate}\n            minDate={startDate}\n            className=\"date-input\"\n          />\n        </div>\n      </div>\n      <div className=\"main-panel\">\n        <HighchartsReact\n          className=\"chart-actual\"\n          highcharts={Highcharts}\n          options={{\n            chart: {\n              type: \"line\",\n              zoomType: \"x\",\n              backgroundColor: {\n                linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n                stops: isDarkMode\n                  ? [\n                      [0, \"#2e2e2e\"],\n                      [1, \"#1a1a1a\"],\n                    ]\n                  : [\n                      [0, \"#ffffff\"],\n                      [1, \"#f0f0f0\"],\n                    ],\n              },\n              borderRadius: 10, // Rounded corners\n              style: {\n                fontFamily: \"Helvetica, Arial, sans-serif\", // Font style for the chart\n              },\n              plotBorderColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n              plotBorderWidth: 1,\n              events: {\n                load: function () {\n                  this.xAxis[0].setExtremes(startDate.getTime(), endDate.getTime());\n                },\n              },\n              boost: {\n                useGPUTranslations: true,\n                usePreAllocated: true,\n              },\n            },\n            title: {\n              text: \"\",\n              style: {\n                color: isDarkMode ? \"#ffffff\" : \"#000000\",\n                fontSize: \"22px\",\n                fontWeight: \"bold\",\n              },\n            },\n            xAxis: {\n              type: \"datetime\",\n              title: {\n                text: \"Date\",\n                style: {\n                  color: isDarkMode ? \"#cccccc\" : \"#000000\",\n                  fontSize: \"14px\",\n                  fontWeight: \"bold\",\n                },\n              },\n              lineColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n              tickColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n              labels: {\n                style: {\n                  color: isDarkMode ? \"#cccccc\" : \"#000000\",\n                  fontSize: \"12px\",\n                },\n              },\n            },\n            yAxis: {\n              title: {\n                text: \"Notional (USD)\",\n                style: {\n                  color: isDarkMode ? \"#cccccc\" : \"#000000\",\n                  fontSize: \"14px\",\n                  fontWeight: \"bold\",\n                },\n              },\n              gridLineColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n              labels: {\n                style: {\n                  color: isDarkMode ? \"#cccccc\" : \"#000000\",\n                  fontSize: \"12px\",\n                },\n              },\n            },\n            legend: {\n              layout: \"horizontal\",\n              align: \"center\",\n              verticalAlign: \"bottom\",\n              itemStyle: {\n                color: isDarkMode ? \"#ffffff\" : \"#000000\",\n                fontSize: \"14px\",\n                fontWeight: \"bold\",\n              },\n              itemHoverStyle: {\n                color: isDarkMode ? \"#cccccc\" : \"#000000\",\n              },\n              itemHiddenStyle: {\n                color: isDarkMode ? \"#666666\" : \"#999999\",\n              },\n            },\n            tooltip: {\n              shared: true,\n              backgroundColor: isDarkMode ? \"rgba(33, 33, 33, 0.85)\" : \"rgba(255, 255, 255, 0.85)\",\n              borderColor: isDarkMode ? \"#666666\" : \"#cccccc\",\n              style: {\n                color: isDarkMode ? \"#ffffff\" : \"#000000\",\n              },\n              formatter: function () {\n                const points = this.points;\n                let targetValue = null;\n                let totalValue = null;\n\n                points.forEach((point) => {\n                  if (point.series.name === \"Target\") {\n                    targetValue = point.y;\n                  }\n                  if (point.series.name === \"Total\") {\n                    totalValue = point.y;\n                  }\n                });\n\n                if (targetValue !== null && totalValue !== null) {\n                  const difference = formatNumber(totalValue - targetValue);\n                  const totalBreakdown = selectedCurrencies\n                    .map((currency) => {\n                      const point = points.find((p) => p.series.name === currency.value);\n                      return point\n                        ? `${currency.value}: ${formatNumber(point.y)}`\n                        : `${currency.value}: N/A`;\n                    })\n                    .join(\"<br>\");\n\n                  let summaryHTML = `<strong>Total: ${formatNumber(totalValue)}</strong><br>`;\n                  summaryHTML += `<strong>Target: ${formatNumber(targetValue)}</strong><br>`;\n                  summaryHTML += `Difference: ${difference}<br><br>`;\n                  summaryHTML += `<strong>Breakdown of Selected Currencies:</strong><br>${totalBreakdown}`;\n\n                  latestSummaryRef.current = summaryHTML;\n\n                  return points.reduce((s, point) => {\n                    return (\n                      s +\n                      `<br><span style=\"color:${point.series.color}\">${point.series.name}</span>: ${formatNumber(point.y)}`\n                    );\n                  }, `<b>${Highcharts.dateFormat(\"%A, %b %e, %Y\", this.x)}</b>`);\n                }\n                return points.reduce((s, point) => {\n                  return (\n                    s +\n                    `<br><span style=\"color:${point.series.color}\">${point.series.name}</span>: ${formatNumber(point.y)}`\n                  );\n                }, `<b>${Highcharts.dateFormat(\"%A, %b %e, %Y\", this.x)}</b>`);\n              },\n            },\n            series: getData(),\n            navigation: {\n              buttonOptions: {\n                enabled: true,\n                theme: {\n                  fill: isDarkMode ? \"#444444\" : \"#f0f0f0\",\n                  stroke: isDarkMode ? \"#666666\" : \"#cccccc\",\n                  style: {\n                    color: isDarkMode ? \"#ffffff\" : \"#000000\",\n                  },\n                },\n              },\n            },\n            exporting: {\n              buttons: {\n                contextButton: {\n                  symbolStroke: isDarkMode ? \"#cccccc\" : \"#000000\",\n                  theme: {\n                    fill: isDarkMode ? \"#444444\" : \"#f0f0f0\",\n                  },\n                },\n              },\n            },\n          }}\n          containerProps={{ className: \"chart-container\" }}\n          updateArgs={[true, true, true]}\n          ref={chartRef}\n        />\n        {compareWithTarget && (\n          <div className=\"summary-box\">\n            <h3>Summary</h3>\n            <div dangerouslySetInnerHTML={{ __html: summary }} />\n          </div>\n        )}\n        <div className=\"bottom-right-buttons\">\n          <button\n            onClick={() => setCompareWithTarget(!compareWithTarget)}\n            className=\"toggle-button\"\n          >\n            {compareWithTarget ? \"Disable Compare with Target\" : \"Enable Compare with Target\"}\n          </button>\n          <div className=\"download-section\">\n            <button className=\"toggle-button\">Download</button>\n            <div className=\"dropdown-content\">\n              <button\n                onClick={() =>\n                  chartRef.current.chart.exportChart({ type: \"image/png\" })\n                }\n              >\n                PNG\n              </button>\n              <button\n                onClick={() =>\n                  chartRef.current.chart.exportChart({ type: \"image/jpeg\" })\n                }\n              >\n                JPEG\n              </button>\n              <button\n                onClick={() =>\n                  chartRef.current.chart.exportChart({ type: \"application/pdf\" })\n                }\n              >\n                PDF\n              </button>\n              <button\n                onClick={() =>\n                  chartRef.current.chart.exportChart({ type: \"image/svg+xml\" })\n                }\n              >\n                SVG\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Graph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}