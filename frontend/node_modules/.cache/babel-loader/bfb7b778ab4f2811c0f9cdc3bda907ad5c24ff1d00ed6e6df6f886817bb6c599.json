{"ast":null,"code":"useEffect(() => {\n  if (loading && data.length > 0) {\n    const updateSummary = () => {\n      if (summary !== latestSummaryRef.current) {\n        setSummary(latestSummaryRef.current);\n      }\n    };\n    const interval = setInterval(updateSummary, 1000);\n    return () => clearInterval(interval);\n  }\n}, [loading, data, summary]);\nconst filteredData = getFilteredData();\nconst totalLine = {\n  name: \"Total\",\n  data: filteredData.map(d => [new Date(d.Date).getTime(), d.Total]),\n  color: isDarkMode ? \"#ffffff\" : \"#343a40\",\n  marker: {\n    enabled: false\n  },\n  zIndex: 1,\n  boostThreshold: 1\n};\nconst shadedData = {\n  name: \"Shaded Area\",\n  data: filteredData.map(d => ({\n    x: new Date(d.Date).getTime(),\n    low: Math.min(d.Total, d.Target),\n    high: Math.max(d.Total, d.Target)\n  })),\n  type: \"arearange\",\n  lineWidth: 0,\n  linkedTo: \"Total\",\n  color: \"#2E83C9\",\n  fillOpacity: 0.3,\n  zIndex: 0,\n  marker: {\n    enabled: false\n  },\n  boostThreshold: 1\n};\nconst handleCurrencyChange = selectedOptions => {\n  setSelectedCurrencies(selectedOptions);\n};\nconst getData = () => {\n  const compareData = [...selectedCurrencies.map(currency => ({\n    name: currency.value,\n    data: filteredData.map(d => [new Date(d.Date).getTime(), d[currency.value]]),\n    color: getCurrencyColor(currency.value),\n    marker: {\n      enabled: false\n    },\n    boostThreshold: 1\n  })), totalLine, shadedData];\n  return compareWithTarget ? compareData : compareData.slice(0, -1);\n};\nconst getCurrencyColor = currency => {\n  const colors = {\n    AUD: \"#f7f6f1\",\n    EUR: \"#728a45\",\n    GBP: \"#dc3545\",\n    JPY: \"#6f42c1\",\n    USD: \"#ffc107\",\n    BRL: \"#25153e\",\n    CAD: \"#52b788\",\n    CHF: \"#2a9d8f\",\n    CLP: \"#c5d900\",\n    CNY: \"#8f8470\",\n    CZK: \"#2c3e50\",\n    DKK: \"#6a67e3\",\n    HKD: \"#b8c1ec\",\n    HUF: \"#7c675c\",\n    INR: \"#7f8fa6\",\n    KRW: \"#57606f\",\n    NOK: \"#ec7a08\",\n    NZD: \"#7b1019\",\n    PLN: \"#004895\",\n    SEK: \"#38812f\",\n    SGD: \"#8a5f2f\",\n    THB: \"#3c9d90\",\n    TWD: \"#f4c104\",\n    ZAR: \"#7d1007\"\n  };\n  return colors[currency] || \"#000000\";\n};","map":{"version":3,"names":["useEffect","loading","data","length","updateSummary","summary","latestSummaryRef","current","setSummary","interval","setInterval","clearInterval","filteredData","getFilteredData","totalLine","name","map","d","Date","getTime","Total","color","isDarkMode","marker","enabled","zIndex","boostThreshold","shadedData","x","low","Math","min","Target","high","max","type","lineWidth","linkedTo","fillOpacity","handleCurrencyChange","selectedOptions","setSelectedCurrencies","getData","compareData","selectedCurrencies","currency","value","getCurrencyColor","compareWithTarget","slice","colors","AUD","EUR","GBP","JPY","USD","BRL","CAD","CHF","CLP","CNY","CZK","DKK","HKD","HUF","INR","KRW","NOK","NZD","PLN","SEK","SGD","THB","TWD","ZAR"],"sources":["/Users/harshmishra/Desktop/dashboard/frontend/src/Components/Graph.jsx"],"sourcesContent":["\n\n\n\nuseEffect(() => {\n    if (loading && data.length > 0) {\n      const updateSummary = () => {\n        if (summary !== latestSummaryRef.current) {\n          setSummary(latestSummaryRef.current);\n        }\n      };\n\n      const interval = setInterval(updateSummary, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [loading, data, summary]);\n\n  const filteredData = getFilteredData();\n\n  const totalLine = {\n    name: \"Total\",\n    data: filteredData.map((d) => [new Date(d.Date).getTime(), d.Total]),\n    color: isDarkMode ? \"#ffffff\" : \"#343a40\",\n    marker: { enabled: false },\n    zIndex: 1,\n    boostThreshold: 1,\n  };\n\n  const shadedData = {\n    name: \"Shaded Area\",\n    data: filteredData.map((d) => ({\n      x: new Date(d.Date).getTime(),\n      low: Math.min(d.Total, d.Target),\n      high: Math.max(d.Total, d.Target),\n    })),\n    type: \"arearange\",\n    lineWidth: 0,\n    linkedTo: \"Total\",\n    color: \"#2E83C9\",\n    fillOpacity: 0.3,\n    zIndex: 0,\n    marker: { enabled: false },\n    boostThreshold: 1,\n  };\n\n  const handleCurrencyChange = (selectedOptions) => {\n    setSelectedCurrencies(selectedOptions);\n  };\n\n  const getData = () => {\n    const compareData = [\n      ...selectedCurrencies.map((currency) => ({\n        name: currency.value,\n        data: filteredData.map((d) => [\n          new Date(d.Date).getTime(),\n          d[currency.value],\n        ]),\n        color: getCurrencyColor(currency.value),\n        marker: { enabled: false },\n        boostThreshold: 1,\n      })),\n      totalLine,\n      shadedData,\n    ];\n    return compareWithTarget ? compareData : compareData.slice(0, -1);\n  };\n\n  const getCurrencyColor = (currency) => {\n    const colors = {\n      AUD: \"#f7f6f1\",\n      EUR: \"#728a45\",\n      GBP: \"#dc3545\",\n      JPY: \"#6f42c1\",\n      USD: \"#ffc107\",\n      BRL: \"#25153e\",\n      CAD: \"#52b788\",\n      CHF: \"#2a9d8f\",\n      CLP: \"#c5d900\",\n      CNY: \"#8f8470\",\n      CZK: \"#2c3e50\",\n      DKK: \"#6a67e3\",\n      HKD: \"#b8c1ec\",\n      HUF: \"#7c675c\",\n      INR: \"#7f8fa6\",\n      KRW: \"#57606f\",\n      NOK: \"#ec7a08\",\n      NZD: \"#7b1019\",\n      PLN: \"#004895\",\n      SEK: \"#38812f\",\n      SGD: \"#8a5f2f\",\n      THB: \"#3c9d90\",\n      TWD: \"#f4c104\",\n      ZAR: \"#7d1007\",\n    };\n    return colors[currency] || \"#000000\";\n  };\n\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}