{"ast":null,"code":"var _jsxFileName = \"/Users/harshmishra/Desktop/dashboard/frontend/src/Pages/XVA_lchNotional.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Graph from \"../Components/Graph_component\";\nimport Table from \"../Components/Table_component\";\nimport Topbar from \"../Components/Topbar_component\";\nimport \"../Styles/Graph.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst XVA_lchNotional = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [selectedCurrencies, setSelectedCurrencies] = useState([{\n    value: \"AUD\",\n    label: \"AUD\"\n  }, {\n    value: \"EUR\",\n    label: \"EUR\"\n  }, {\n    value: \"GBP\",\n    label: \"GBP\"\n  }, {\n    value: \"JPY\",\n    label: \"JPY\"\n  }, {\n    value: \"USD\",\n    label: \"USD\"\n  }]);\n  const [startDate, setStartDate] = useState(new Date(\"2022-06-01\"));\n  const [endDate, setEndDate] = useState(new Date(\"2024-06-25\"));\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/xva\");\n        const result = await response.json();\n        setData(result);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const getFilteredData = () => {\n    return data.filter(d => {\n      const date = new Date(d.Date).getTime();\n      return date >= startDate.getTime() && date <= endDate.getTime();\n    });\n  };\n  const filteredData = getFilteredData();\n  const formatNumber = number => {\n    return new Intl.NumberFormat('en-US', {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(number);\n  };\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${isDarkMode ? 'dark-theme' : 'light-theme'}`,\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {\n      isDarkMode: isDarkMode,\n      toggleTheme: toggleTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {\n      isDarkMode: isDarkMode,\n      selectedCurrencies: selectedCurrencies,\n      setSelectedCurrencies: setSelectedCurrencies,\n      startDate: startDate,\n      setStartDate: setStartDate,\n      endDate: endDate,\n      setEndDate: setEndDate,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      isDarkMode: isDarkMode,\n      selectedCurrencies: selectedCurrencies,\n      filteredData: filteredData,\n      formatNumber: formatNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(XVA_lchNotional, \"IQpp6Rnbsu1ShsX5UZHRsvBg+dU=\");\n_c = XVA_lchNotional;\nexport default XVA_lchNotional;\nvar _c;\n$RefreshReg$(_c, \"XVA_lchNotional\");","map":{"version":3,"names":["React","useState","useEffect","Graph","Table","Topbar","jsxDEV","_jsxDEV","XVA_lchNotional","_s","isDarkMode","setIsDarkMode","selectedCurrencies","setSelectedCurrencies","value","label","startDate","setStartDate","Date","endDate","setEndDate","data","setData","loading","setLoading","fetchData","response","fetch","result","json","error","console","getFilteredData","filter","d","date","getTime","filteredData","formatNumber","number","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","toggleTheme","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harshmishra/Desktop/dashboard/frontend/src/Pages/XVA_lchNotional.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Graph from \"../Components/Graph_component\";\nimport Table from \"../Components/Table_component\";\nimport Topbar from \"../Components/Topbar_component\";\nimport \"../Styles/Graph.css\";\n\nconst XVA_lchNotional = () => {\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [selectedCurrencies, setSelectedCurrencies] = useState([\n    { value: \"AUD\", label: \"AUD\" },\n    { value: \"EUR\", label: \"EUR\" },\n    { value: \"GBP\", label: \"GBP\" },\n    { value: \"JPY\", label: \"JPY\" },\n    { value: \"USD\", label: \"USD\" }\n  ]);\n  const [startDate, setStartDate] = useState(new Date(\"2022-06-01\"));\n  const [endDate, setEndDate] = useState(new Date(\"2024-06-25\"));\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/xva\");\n        const result = await response.json();\n        setData(result);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const getFilteredData = () => {\n    return data.filter((d) => {\n      const date = new Date(d.Date).getTime();\n      return date >= startDate.getTime() && date <= endDate.getTime();\n    });\n  };\n\n  const filteredData = getFilteredData();\n\n  const formatNumber = (number) => {\n    return new Intl.NumberFormat('en-US', {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(number);\n  };\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return (\n    <div className={`app-container ${isDarkMode ? 'dark-theme' : 'light-theme'}`}>\n      <Topbar isDarkMode={isDarkMode} toggleTheme={toggleTheme} />\n      <Graph\n        isDarkMode={isDarkMode}\n        selectedCurrencies={selectedCurrencies}\n        setSelectedCurrencies={setSelectedCurrencies}\n        startDate={startDate}\n        setStartDate={setStartDate}\n        endDate={endDate}\n        setEndDate={setEndDate}\n        data={data}\n      />\n      <Table\n        isDarkMode={isDarkMode}\n        selectedCurrencies={selectedCurrencies}\n        filteredData={filteredData}\n        formatNumber={formatNumber}\n      />\n    </div>\n  );\n};\n\nexport default XVA_lchNotional;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,+BAA+B;AACjD,OAAOC,KAAK,MAAM,+BAA+B;AACjD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,CAC3D;IAAEa,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC9B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC9B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC9B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC9B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,CAC/B,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAIiB,IAAI,CAAC,YAAY,CAAC,CAAC;EAClE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAIiB,IAAI,CAAC,YAAY,CAAC,CAAC;EAC9D,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMuB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAA2B,CAAC;QACzD,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACpCP,OAAO,CAACM,MAAM,CAAC;QACfJ,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CN,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC5B,OAAOX,IAAI,CAACY,MAAM,CAAEC,CAAC,IAAK;MACxB,MAAMC,IAAI,GAAG,IAAIjB,IAAI,CAACgB,CAAC,CAAChB,IAAI,CAAC,CAACkB,OAAO,CAAC,CAAC;MACvC,OAAOD,IAAI,IAAInB,SAAS,CAACoB,OAAO,CAAC,CAAC,IAAID,IAAI,IAAIhB,OAAO,CAACiB,OAAO,CAAC,CAAC;IACjE,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAGL,eAAe,CAAC,CAAC;EAEtC,MAAMM,YAAY,GAAIC,MAAM,IAAK;IAC/B,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;MACpCC,qBAAqB,EAAE,CAAC;MACxBC,qBAAqB,EAAE;IACzB,CAAC,CAAC,CAACC,MAAM,CAACL,MAAM,CAAC;EACnB,CAAC;EAED,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxBlC,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,oBACEH,OAAA;IAAKuC,SAAS,EAAE,iBAAiBpC,UAAU,GAAG,YAAY,GAAG,aAAa,EAAG;IAAAqC,QAAA,gBAC3ExC,OAAA,CAACF,MAAM;MAACK,UAAU,EAAEA,UAAW;MAACmC,WAAW,EAAEA;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5D5C,OAAA,CAACJ,KAAK;MACJO,UAAU,EAAEA,UAAW;MACvBE,kBAAkB,EAAEA,kBAAmB;MACvCC,qBAAqB,EAAEA,qBAAsB;MAC7CG,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3BE,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA,UAAW;MACvBC,IAAI,EAAEA;IAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACF5C,OAAA,CAACH,KAAK;MACJM,UAAU,EAAEA,UAAW;MACvBE,kBAAkB,EAAEA,kBAAmB;MACvCyB,YAAY,EAAEA,YAAa;MAC3BC,YAAY,EAAEA;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1C,EAAA,CAtEID,eAAe;AAAA4C,EAAA,GAAf5C,eAAe;AAwErB,eAAeA,eAAe;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}