{"ast":null,"code":"var _jsxFileName = \"/Users/harshmishra/Desktop/dashboard/frontend/src/Components/Selector.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, FormGroup, Label, Input } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useShiftSelected = (initialState, change) => {\n  _s();\n  const [previousSelected, setPreviousSelected] = useState(null);\n  const [previousChecked, setPreviousChecked] = useState(false);\n  const [currentSelected, setCurrentSelected] = useState(null);\n  const onChange = useCallback((event, item) => {\n    if (event.nativeEvent.shiftKey) {\n      const current = initialState.findIndex(x => x === item);\n      const previous = initialState.findIndex(x => x === previousSelected);\n      const previousCurrent = initialState.findIndex(x => x === currentSelected);\n      const start = Math.min(current, previous);\n      const end = Math.max(current, previous);\n      if (start > -1 && end > -1) {\n        change(previousChecked, initialState.slice(start, end + 1));\n        if (previousCurrent > end) {\n          change(!previousChecked, initialState.slice(end + 1, previousCurrent + 1));\n        }\n        if (previousCurrent < start) {\n          change(!previousChecked, initialState.slice(previousCurrent, start));\n        }\n        setCurrentSelected(item);\n        return;\n      }\n    } else {\n      setPreviousSelected(item);\n      setCurrentSelected(null);\n      setPreviousChecked(event.target.checked);\n    }\n    change(event.target.checked, [item]);\n  }, [change, initialState, previousSelected, previousChecked, currentSelected]);\n  return onChange;\n};\n_s(useShiftSelected, \"EhdsBhOvQz+5VkL+zWtvMOZYoWU=\");\nconst Selector = ({\n  options,\n  selectedCurrencies,\n  setSelectedCurrencies\n}) => {\n  _s2();\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n  const change = (addOrRemove, items) => {\n    if (addOrRemove) {\n      setSelectedCurrencies([...selectedCurrencies, ...items.filter(item => !selectedCurrencies.includes(item))]);\n    } else {\n      setSelectedCurrencies(selectedCurrencies.filter(currency => !items.includes(currency)));\n    }\n  };\n  const onChange = useShiftSelected(options.map(option => option.value), change);\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n      caret: true,\n      children: selectedCurrencies.length > 0 ? selectedCurrencies.join(', ') : 'Select Currencies'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(DropdownItem, {\n        toggle: false,\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          check: true,\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            check: true,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"checkbox\",\n              value: option.value,\n              checked: selectedCurrencies.includes(option.value),\n              onChange: e => onChange(e, option.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), option.label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s2(Selector, \"VU5c0iWaHg90PvsR3lQP7zwSs4g=\", false, function () {\n  return [useShiftSelected];\n});\n_c = Selector;\nexport default Selector;\nvar _c;\n$RefreshReg$(_c, \"Selector\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","FormGroup","Label","Input","jsxDEV","_jsxDEV","useShiftSelected","initialState","change","_s","previousSelected","setPreviousSelected","previousChecked","setPreviousChecked","currentSelected","setCurrentSelected","onChange","event","item","nativeEvent","shiftKey","current","findIndex","x","previous","previousCurrent","start","Math","min","end","max","slice","target","checked","Selector","options","selectedCurrencies","setSelectedCurrencies","_s2","dropdownOpen","setDropdownOpen","toggle","prevState","addOrRemove","items","filter","includes","currency","map","option","value","isOpen","children","caret","length","join","fileName","_jsxFileName","lineNumber","columnNumber","index","check","type","e","label","_c","$RefreshReg$"],"sources":["/Users/harshmishra/Desktop/dashboard/frontend/src/Components/Selector.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, FormGroup, Label, Input } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst useShiftSelected = (initialState, change) => {\n  const [previousSelected, setPreviousSelected] = useState(null);\n  const [previousChecked, setPreviousChecked] = useState(false);\n  const [currentSelected, setCurrentSelected] = useState(null);\n\n  const onChange = useCallback(\n    (event, item) => {\n      if (event.nativeEvent.shiftKey) {\n        const current = initialState.findIndex((x) => x === item);\n        const previous = initialState.findIndex((x) => x === previousSelected);\n        const previousCurrent = initialState.findIndex((x) => x === currentSelected);\n        const start = Math.min(current, previous);\n        const end = Math.max(current, previous);\n        if (start > -1 && end > -1) {\n          change(previousChecked, initialState.slice(start, end + 1));\n          if (previousCurrent > end) {\n            change(!previousChecked, initialState.slice(end + 1, previousCurrent + 1));\n          }\n          if (previousCurrent < start) {\n            change(!previousChecked, initialState.slice(previousCurrent, start));\n          }\n          setCurrentSelected(item);\n          return;\n        }\n      } else {\n        setPreviousSelected(item);\n        setCurrentSelected(null);\n        setPreviousChecked(event.target.checked);\n      }\n      change(event.target.checked, [item]);\n    },\n    [change, initialState, previousSelected, previousChecked, currentSelected]\n  );\n\n  return onChange;\n};\n\nconst Selector = ({ options, selectedCurrencies, setSelectedCurrencies }) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  const change = (addOrRemove, items) => {\n    if (addOrRemove) {\n      setSelectedCurrencies([...selectedCurrencies, ...items.filter(item => !selectedCurrencies.includes(item))]);\n    } else {\n      setSelectedCurrencies(selectedCurrencies.filter(currency => !items.includes(currency)));\n    }\n  };\n\n  const onChange = useShiftSelected(options.map(option => option.value), change);\n\n  return (\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n      <DropdownToggle caret>\n        {selectedCurrencies.length > 0 ? selectedCurrencies.join(', ') : 'Select Currencies'}\n      </DropdownToggle>\n      <DropdownMenu>\n        {options.map((option, index) => (\n          <DropdownItem key={option.value} toggle={false}>\n            <FormGroup check>\n              <Label check>\n                <Input\n                  type=\"checkbox\"\n                  value={option.value}\n                  checked={selectedCurrencies.includes(option.value)}\n                  onChange={(e) => onChange(e, option.value)}\n                />\n                {option.label}\n              </Label>\n            </FormGroup>\n          </DropdownItem>\n        ))}\n      </DropdownMenu>\n    </Dropdown>\n  );\n};\n\nexport default Selector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}