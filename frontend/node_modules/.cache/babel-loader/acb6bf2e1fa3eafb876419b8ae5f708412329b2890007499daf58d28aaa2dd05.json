{"ast":null,"code":"var _jsxFileName = \"/Users/harshmishra/Desktop/dashboard/frontend/src/Components/Selector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, FormGroup, Label, Input } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Selector = ({\n  options,\n  selectedCurrencies,\n  setSelectedCurrencies\n}) => {\n  _s();\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [lastSelectedIndex, setLastSelectedIndex] = useState(null);\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n  const handleCheckboxChange = (event, index) => {\n    const {\n      value,\n      checked\n    } = event.target;\n    let updatedSelectedCurrencies = [...selectedCurrencies];\n    if (event.shiftKey && lastSelectedIndex !== null) {\n      const start = Math.min(lastSelectedIndex, index);\n      const end = Math.max(lastSelectedIndex, index);\n      for (let i = start; i <= end; i++) {\n        const currencyValue = options[i].value;\n        if (checked) {\n          if (!updatedSelectedCurrencies.includes(currencyValue)) {\n            updatedSelectedCurrencies.push(currencyValue);\n          }\n        } else {\n          updatedSelectedCurrencies = updatedSelectedCurrencies.filter(currency => currency !== currencyValue);\n        }\n      }\n    } else {\n      if (checked) {\n        updatedSelectedCurrencies.push(value);\n      } else {\n        updatedSelectedCurrencies = updatedSelectedCurrencies.filter(currency => currency !== value);\n      }\n      setLastSelectedIndex(index);\n    }\n    setSelectedCurrencies(updatedSelectedCurrencies);\n  };\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    className: \"custom-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n      caret: true,\n      children: selectedCurrencies.length > 0 ? selectedCurrencies.join(', ') : 'Select Currencies'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(DropdownItem, {\n        toggle: false,\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          check: true,\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            check: true,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"checkbox\",\n              value: option.value,\n              checked: selectedCurrencies.includes(option.value),\n              onChange: e => handleCheckboxChange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), option.label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Selector, \"F7TWhv+bHkaNEPPQWkcHDTqL2u8=\");\n_c = Selector;\nexport default Selector;\nvar _c;\n$RefreshReg$(_c, \"Selector\");","map":{"version":3,"names":["React","useState","useEffect","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","FormGroup","Label","Input","jsxDEV","_jsxDEV","Selector","options","selectedCurrencies","setSelectedCurrencies","_s","dropdownOpen","setDropdownOpen","lastSelectedIndex","setLastSelectedIndex","toggle","prevState","handleCheckboxChange","event","index","value","checked","target","updatedSelectedCurrencies","shiftKey","start","Math","min","end","max","i","currencyValue","includes","push","filter","currency","isOpen","className","children","caret","length","join","fileName","_jsxFileName","lineNumber","columnNumber","map","option","check","type","onChange","e","label","_c","$RefreshReg$"],"sources":["/Users/harshmishra/Desktop/dashboard/frontend/src/Components/Selector.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  FormGroup,\n  Label,\n  Input\n} from 'reactstrap';\n\nconst Selector = ({ options, selectedCurrencies, setSelectedCurrencies }) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [lastSelectedIndex, setLastSelectedIndex] = useState(null);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  const handleCheckboxChange = (event, index) => {\n    const { value, checked } = event.target;\n    let updatedSelectedCurrencies = [...selectedCurrencies];\n\n    if (event.shiftKey && lastSelectedIndex !== null) {\n      const start = Math.min(lastSelectedIndex, index);\n      const end = Math.max(lastSelectedIndex, index);\n      for (let i = start; i <= end; i++) {\n        const currencyValue = options[i].value;\n        if (checked) {\n          if (!updatedSelectedCurrencies.includes(currencyValue)) {\n            updatedSelectedCurrencies.push(currencyValue);\n          }\n        } else {\n          updatedSelectedCurrencies = updatedSelectedCurrencies.filter(currency => currency !== currencyValue);\n        }\n      }\n    } else {\n      if (checked) {\n        updatedSelectedCurrencies.push(value);\n      } else {\n        updatedSelectedCurrencies = updatedSelectedCurrencies.filter(currency => currency !== value);\n      }\n      setLastSelectedIndex(index);\n    }\n\n    setSelectedCurrencies(updatedSelectedCurrencies);\n  };\n\n  return (\n    <Dropdown isOpen={dropdownOpen} toggle={toggle} className=\"custom-dropdown\">\n      <DropdownToggle caret>\n        {selectedCurrencies.length > 0 ? selectedCurrencies.join(', ') : 'Select Currencies'}\n      </DropdownToggle>\n      <DropdownMenu>\n        {options.map((option, index) => (\n          <DropdownItem key={option.value} toggle={false}>\n            <FormGroup check>\n              <Label check>\n                <Input\n                  type=\"checkbox\"\n                  value={option.value}\n                  checked={selectedCurrencies.includes(option.value)}\n                  onChange={(e) => handleCheckboxChange(e, index)}\n                />\n                {option.label}\n              </Label>\n            </FormGroup>\n          </DropdownItem>\n        ))}\n      </DropdownMenu>\n    </Dropdown>\n  );\n};\n\nexport default Selector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}