{"ast":null,"code":"var _jsxFileName = \"/Users/harshmishra/Desktop/dashboard/frontend/src/Components/Graph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport HighchartsBoost from \"highcharts/modules/boost\";\nimport HighchartsExporting from \"highcharts/modules/exporting\";\nimport HighchartsAnnotations from \"highcharts/modules/annotations\";\nimport HighchartsMore from \"highcharts/highcharts-more\";\nimport DataTable from \"react-data-table-component\";\nimport DatePicker from \"react-datepicker\";\nimport Select from \"react-select\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Topbar from \"./Topbar\";\nimport \"./Styles/HighChartsGraph.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nHighchartsBoost(Highcharts);\nHighchartsExporting(Highcharts);\nHighchartsAnnotations(Highcharts);\nHighchartsMore(Highcharts);\nconst HighchartsGraph = () => {\n  _s();\n  const [compareWithTarget, setCompareWithTarget] = useState(false);\n  const [selectedCurrencies, setSelectedCurrencies] = useState([{\n    value: \"AUD\",\n    label: \"AUD\"\n  }]);\n  const [summary, setSummary] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date(\"2022-06-01\"));\n  const [endDate, setEndDate] = useState(new Date(\"2024-06-25\"));\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const latestSummaryRef = useRef(\"\");\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/xva\");\n        const result = await response.json();\n        setData(result);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (loading && data.length > 0) {\n      Highcharts.charts.forEach(chart => {\n        if (chart) {\n          chart.xAxis[0].setExtremes(startDate.getTime(), endDate.getTime());\n          chart.series.forEach(series => {\n            series.setData(getData().find(s => s.name === series.name).data);\n          });\n        }\n      });\n    }\n  }, [startDate, endDate, selectedCurrencies, compareWithTarget, loading, data, isDarkMode]);\n  const getData = () => {\n    const compareData = [...selectedCurrencies.map(currency => ({\n      name: currency.value,\n      data: filteredData.map(d => [new Date(d.Date).getTime(), d[currency.value]]),\n      color: getCurrencyColor(currency.value),\n      marker: {\n        enabled: false\n      },\n      boostThreshold: 1\n    })), {\n      name: \"Target\",\n      data: filteredData.map(d => [new Date(d.Date).getTime(), d.Target]),\n      color: \"#007bff\"\n    }];\n    return compareWithTarget ? compareData.slice(0, -1) : compareData;\n  };\n  const getCurrencyColor = currency => {\n    const colors = {\n      AUD: \"#ff6161\",\n      EUR: \"#28a745\",\n      GBP: \"#dc3545\",\n      JPY: \"#6f42c1\",\n      USD: \"#ffc107\",\n      CAD: \"#e83e8c\",\n      CHF: \"#17a2b8\",\n      CNY: \"#007bff\",\n      INR: \"#343a40\",\n      KRW: \"#28a745\",\n      NOK: \"#e83e8c\",\n      SEK: \"#17a2b8\"\n    };\n    return colors[currency] || \"#000000\";\n  };\n  const customTableStyles = {\n    header: {\n      style: {\n        fontSize: \"22px\",\n        fontWeight: \"bold\",\n        color: \"var(--text-color)\",\n        backgroundColor: \"var(--control-bg-color)\"\n      }\n    },\n    rows: {\n      style: {\n        fontSize: \"16px\",\n        color: \"var(--text-color)\",\n        backgroundColor: \"var(--input-bg-color)\",\n        \"&:not(:last-of-type)\": {\n          borderBottomStyle: \"solid\",\n          borderBottomWidth: \"1px\",\n          borderBottomColor: \"var(--control-bg-color)\"\n        }\n      }\n    },\n    headCells: {\n      style: {\n        fontSize: \"18px\",\n        fontWeight: \"bold\",\n        color: \"var(--text-color)\",\n        backgroundColor: \"var(--control-bg-color)\"\n      }\n    },\n    cells: {\n      style: {\n        fontSize: \"16px\",\n        color: \"var(--text-color)\",\n        backgroundColor: \"var(--input-bg-color)\"\n      }\n    }\n  };\n  const handleCurrencyChange = selectedOptions => {\n    setSelectedCurrencies(selectedOptions);\n  };\n  const shadeData = {\n    name: \"Shaded Area\",\n    data: filteredData.map(d => ({\n      x: new Date(d.Date).getTime(),\n      low: Math.min(d.Total, d.Target),\n      high: Math.max(d.Total, d.Target)\n    })),\n    type: \"arearange\",\n    lineWidth: 0,\n    linkedTo: \"Total\",\n    color: \"#28a745\",\n    fillOpacity: 0.3,\n    zIndex: 0,\n    marker: {\n      enabled: false\n    },\n    boostThreshold: 1\n  };\n  const getFilteredTableData = () => {\n    return filteredData.map(d => {\n      const rowData = {\n        Date: d.Date,\n        Target: d.Target,\n        Total: d.Total\n      };\n      selectedCurrencies.forEach(currency => {\n        rowData[currency.value] = d[currency.value];\n      });\n      return rowData;\n    });\n  };\n  const getColumns = () => {\n    const baseColumns = [{\n      name: \"Date\",\n      selector: row => row.Date,\n      sortable: true\n    }, {\n      name: \"Target\",\n      selector: row => row.Target,\n      sortable: true\n    }];\n    const currencyColumns = selectedCurrencies.map(currency => ({\n      name: currency.label,\n      selector: row => row[currency.value],\n      sortable: true\n    }));\n    return [...baseColumns, ...currencyColumns, {\n      name: \"Total\",\n      selector: row => row.Total,\n      sortable: true\n    }];\n  };\n  const handleTooltipFormatter = function () {\n    const points = this.points;\n    let targetValue = null;\n    let totalValue = null;\n    points.forEach(point => {\n      if (point.series.name === \"Target\") {\n        targetValue = point.y;\n      }\n      if (point.series.name === \"Total\") {\n        totalValue = point.y;\n      }\n    });\n    if (targetValue !== null && totalValue !== null) {\n      const difference = (totalValue - targetValue).toFixed(2);\n      const totalBreakdown = selectedCurrencies.map(currency => {\n        const point = points.find(p => p.series.name === currency.value);\n        return point ? `${currency.value}: ${point.y.toFixed(2)}` : `${currency.value}: N/A`;\n      }).join(\"<br>\");\n      let summaryHTML = `<strong>Total: ${totalValue.toFixed(2)}</strong><br>`;\n      summaryHTML += `<strong>Target: ${targetValue.toFixed(2)}</strong><br>`;\n      summaryHTML += `<strong>Difference: ${difference}</strong><br>`;\n      summaryHTML += `<strong>Breakdown of Selected Currencies:</strong><br>${totalBreakdown}`;\n      latestSummaryRef.current = summaryHTML;\n      return points.reduce((s, point) => {\n        return s + `<br/><span style=\"color:${point.series.color}\">${point.series.name}</span>: ${point.y}`;\n      }, `<b>${Highcharts.dateFormat(\"%A, %b %e, %Y\", this.x)}</b>`);\n    }\n    return points.reduce((s, point) => {\n      return s + `<br/><span style=\"color:${point.series.color}\">${point.series.name}</span>: ${point.y}`;\n    }, `<b>${Highcharts.dateFormat(\"%A, %b %e, %Y\", this.x)}</b>`);\n  };\n  const options = {\n    chart: {\n      type: \"line\",\n      zoomType: \"x\",\n      backgroundColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 1,\n          y2: 1\n        },\n        stops: isDarkMode ? [[0, \"#2e2e2e\"], [1, \"#1a1a1a\"]] : [[0, \"#ffffff\"], [1, \"#f0f0f0\"]]\n      },\n      borderRadius: 10,\n      // Rounded corners\n      style: {\n        fontFamily: \"Helvetica, Arial, sans-serif\" // Font style for the chart\n      },\n      plotBorderColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n      plotBorderWidth: 1,\n      events: {\n        load: function () {\n          this.xAxis[0].setExtremes(startDate.getTime(), endDate.getTime());\n        }\n      },\n      boost: {\n        useGPUTranslations: true,\n        usePreAllocated: true\n      }\n    },\n    title: {\n      text: \"LCH Notional\",\n      style: {\n        color: isDarkMode ? \"#ffffff\" : \"#000000\",\n        fontSize: \"22px\",\n        fontWeight: \"bold\"\n      }\n    },\n    xAxis: {\n      type: \"datetime\",\n      title: {\n        text: \"Date\",\n        style: {\n          color: isDarkMode ? \"#cccccc\" : \"#000000\",\n          fontSize: \"14px\",\n          fontWeight: \"bold\"\n        }\n      },\n      lineColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n      tickColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n      labels: {\n        style: {\n          color: isDarkMode ? \"#cccccc\" : \"#000000\",\n          fontSize: \"12px\"\n        }\n      }\n    },\n    yAxis: {\n      title: {\n        text: \"Notional (USD)\",\n        style: {\n          color: isDarkMode ? \"#cccccc\" : \"#000000\",\n          fontSize: \"14px\",\n          fontWeight: \"bold\"\n        }\n      },\n      gridLineColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n      labels: {\n        style: {\n          color: isDarkMode ? \"#cccccc\" : \"#000000\",\n          fontSize: \"12px\"\n        }\n      }\n    },\n    legend: {\n      layout: \"horizontal\",\n      align: \"center\",\n      verticalAlign: \"bottom\",\n      itemStyle: {\n        color: isDarkMode ? \"#ffffff\" : \"#000000\",\n        fontSize: \"14px\",\n        fontWeight: \"bold\"\n      },\n      itemHoverStyle: {\n        color: isDarkMode ? \"#cccccc\" : \"#000000\"\n      },\n      itemHiddenStyle: {\n        color: isDarkMode ? \"#666666\" : \"#999999\"\n      }\n    },\n    tooltip: {\n      shared: true,\n      backgroundColor: isDarkMode ? \"rgba(33, 33, 33, 0.85)\" : \"rgba(255, 255, 255, 0.85)\",\n      borderColor: isDarkMode ? \"#666666\" : \"#cccccc\",\n      style: {\n        color: isDarkMode ? \"#ffffff\" : \"#000000\"\n      },\n      formatter: handleTooltipFormatter\n    },\n    series: getData(),\n    navigation: {\n      buttonOptions: {\n        enabled: true,\n        theme: {\n          fill: isDarkMode ? \"#444444\" : \"#f0f0f0\",\n          stroke: isDarkMode ? \"#666666\" : \"#cccccc\",\n          style: {\n            color: isDarkMode ? \"#ffffff\" : \"#000000\"\n          }\n        }\n      }\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          symbolStroke: isDarkMode ? \"#cccccc\" : \"#000000\",\n          theme: {\n            fill: isDarkMode ? \"#444444\" : \"#f0f0f0\"\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${isDarkMode ? \"dark-theme\" : \"light-theme\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"floating-box-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"translucent-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Select Currencies to Include in Total:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              isMulti: true,\n              name: \"currencies\",\n              options: [{\n                value: \"AUD\",\n                label: \"AUD\"\n              }, {\n                value: \"EUR\",\n                label: \"EUR\"\n              }, {\n                value: \"GBP\",\n                label: \"GBP\"\n              }, {\n                value: \"JPY\",\n                label: \"JPY\"\n              }, {\n                value: \"USD\",\n                label: \"USD\"\n              }\n              // add more currencies as needed\n              ],\n              classNamePrefix: \"select\",\n              value: selectedCurrencies,\n              onChange: handleCurrencyChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-picker\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Select Date Range:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                selected: startDate,\n                onChange: date => setStartDate(date),\n                selectsStart: true,\n                startDate: startDate,\n                endDate: endDate,\n                className: \"date-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                selected: endDate,\n                onChange: date => setEndDate(date),\n                selectsEnd: true,\n                startDate: startDate,\n                endDate: endDate,\n                className: \"date-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: {\n                __html: summary\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-table-section\",\n            children: /*#__PURE__*/_jsxDEV(DataTable, {\n              title: \"LCH Notional | Summary Table\",\n              columns: getColumns(),\n              data: getFilteredTableData(),\n              pagination: true,\n              highlightOnHover: true,\n              pointerOnHover: true,\n              customStyles: customTableStyles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-panel\",\n        children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n          highcharts: Highcharts,\n          options: options,\n          ref: chartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"translucent-box2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Graph Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCompareWithTarget(!compareWithTarget),\n          className: \"toggle-button\",\n          children: compareWithTarget ? \"Disable Compare with Target\" : \"Enable Compare with Target\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"download-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => chartRef.current.chart.exportChart({\n              type: \"image/png\"\n            }),\n            children: \"PNG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => chartRef.current.chart.exportChart({\n              type: \"image/jpeg\"\n            }),\n            children: \"JPEG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => chartRef.current.chart.exportChart({\n              type: \"application/pdf\"\n            }),\n            children: \"PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => chartRef.current.chart.exportChart({\n              type: \"image/svg+xml\"\n            }),\n            children: \"SVG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsDarkMode(!isDarkMode),\n          className: \"toggle-button\",\n          children: \"Toggle Dark Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 5\n  }, this);\n};\n_s(HighchartsGraph, \"hybDz4ZeY90ahtBvPRu9FY7nnvw=\");\n_c = HighchartsGraph;\nexport default HighchartsGraph;\nvar _c;\n$RefreshReg$(_c, \"HighchartsGraph\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Highcharts","HighchartsReact","HighchartsBoost","HighchartsExporting","HighchartsAnnotations","HighchartsMore","DataTable","DatePicker","Select","Topbar","jsxDEV","_jsxDEV","HighchartsGraph","_s","compareWithTarget","setCompareWithTarget","selectedCurrencies","setSelectedCurrencies","value","label","summary","setSummary","startDate","setStartDate","Date","endDate","setEndDate","data","setData","loading","setLoading","isDarkMode","setIsDarkMode","latestSummaryRef","chartRef","fetchData","response","fetch","result","json","error","console","length","charts","forEach","chart","xAxis","setExtremes","getTime","series","getData","find","s","name","compareData","map","currency","filteredData","d","color","getCurrencyColor","marker","enabled","boostThreshold","Target","slice","colors","AUD","EUR","GBP","JPY","USD","CAD","CHF","CNY","INR","KRW","NOK","SEK","customTableStyles","header","style","fontSize","fontWeight","backgroundColor","rows","borderBottomStyle","borderBottomWidth","borderBottomColor","headCells","cells","handleCurrencyChange","selectedOptions","shadeData","x","low","Math","min","Total","high","max","type","lineWidth","linkedTo","fillOpacity","zIndex","getFilteredTableData","rowData","getColumns","baseColumns","selector","row","sortable","currencyColumns","handleTooltipFormatter","points","targetValue","totalValue","point","y","difference","toFixed","totalBreakdown","p","join","summaryHTML","current","reduce","dateFormat","options","zoomType","linearGradient","x1","y1","x2","y2","stops","borderRadius","fontFamily","plotBorderColor","plotBorderWidth","events","load","boost","useGPUTranslations","usePreAllocated","title","text","lineColor","tickColor","labels","yAxis","gridLineColor","legend","layout","align","verticalAlign","itemStyle","itemHoverStyle","itemHiddenStyle","tooltip","shared","borderColor","formatter","navigation","buttonOptions","theme","fill","stroke","exporting","buttons","contextButton","symbolStroke","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isMulti","classNamePrefix","onChange","selected","date","selectsStart","selectsEnd","dangerouslySetInnerHTML","__html","columns","pagination","highlightOnHover","pointerOnHover","customStyles","highcharts","ref","onClick","exportChart","_c","$RefreshReg$"],"sources":["/Users/harshmishra/Desktop/dashboard/frontend/src/Components/Graph.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport HighchartsBoost from \"highcharts/modules/boost\";\nimport HighchartsExporting from \"highcharts/modules/exporting\";\nimport HighchartsAnnotations from \"highcharts/modules/annotations\";\nimport HighchartsMore from \"highcharts/highcharts-more\";\nimport DataTable from \"react-data-table-component\";\nimport DatePicker from \"react-datepicker\";\nimport Select from \"react-select\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Topbar from \"./Topbar\";\nimport \"./Styles/HighChartsGraph.css\";\n\nHighchartsBoost(Highcharts);\nHighchartsExporting(Highcharts);\nHighchartsAnnotations(Highcharts);\nHighchartsMore(Highcharts);\n\nconst HighchartsGraph = () => {\n  const [compareWithTarget, setCompareWithTarget] = useState(false);\n  const [selectedCurrencies, setSelectedCurrencies] = useState([\n    { value: \"AUD\", label: \"AUD\" },\n  ]);\n  const [summary, setSummary] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date(\"2022-06-01\"));\n  const [endDate, setEndDate] = useState(new Date(\"2024-06-25\"));\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const latestSummaryRef = useRef(\"\");\n\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/xva\");\n        const result = await response.json();\n        setData(result);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (loading && data.length > 0) {\n      Highcharts.charts.forEach((chart) => {\n        if (chart) {\n          chart.xAxis[0].setExtremes(startDate.getTime(), endDate.getTime());\n          chart.series.forEach((series) => {\n            series.setData(\n              getData().find((s) => s.name === series.name).data\n            );\n          });\n        }\n      });\n    }\n  }, [startDate, endDate, selectedCurrencies, compareWithTarget, loading, data, isDarkMode]);\n\n  const getData = () => {\n    const compareData = [\n      ...selectedCurrencies.map((currency) => ({\n        name: currency.value,\n        data: filteredData.map((d) => [\n          new Date(d.Date).getTime(),\n          d[currency.value],\n        ]),\n        color: getCurrencyColor(currency.value),\n        marker: { enabled: false },\n        boostThreshold: 1,\n      })),\n      {\n        name: \"Target\",\n        data: filteredData.map((d) => [new Date(d.Date).getTime(), d.Target]),\n        color: \"#007bff\",\n      },\n    ];\n\n    return compareWithTarget ? compareData.slice(0, -1) : compareData;\n  };\n\n  const getCurrencyColor = (currency) => {\n    const colors = {\n      AUD: \"#ff6161\",\n      EUR: \"#28a745\",\n      GBP: \"#dc3545\",\n      JPY: \"#6f42c1\",\n      USD: \"#ffc107\",\n      CAD: \"#e83e8c\",\n      CHF: \"#17a2b8\",\n      CNY: \"#007bff\",\n      INR: \"#343a40\",\n      KRW: \"#28a745\",\n      NOK: \"#e83e8c\",\n      SEK: \"#17a2b8\",\n    };\n    return colors[currency] || \"#000000\";\n  };\n\n  const customTableStyles = {\n    header: {\n      style: {\n        fontSize: \"22px\",\n        fontWeight: \"bold\",\n        color: \"var(--text-color)\",\n        backgroundColor: \"var(--control-bg-color)\",\n      },\n    },\n    rows: {\n      style: {\n        fontSize: \"16px\",\n        color: \"var(--text-color)\",\n        backgroundColor: \"var(--input-bg-color)\",\n        \"&:not(:last-of-type)\": {\n          borderBottomStyle: \"solid\",\n          borderBottomWidth: \"1px\",\n          borderBottomColor: \"var(--control-bg-color)\",\n        },\n      },\n    },\n    headCells: {\n      style: {\n        fontSize: \"18px\",\n        fontWeight: \"bold\",\n        color: \"var(--text-color)\",\n        backgroundColor: \"var(--control-bg-color)\",\n      },\n    },\n    cells: {\n      style: {\n        fontSize: \"16px\",\n        color: \"var(--text-color)\",\n        backgroundColor: \"var(--input-bg-color)\",\n      },\n    },\n  };\n\n  const handleCurrencyChange = (selectedOptions) => {\n    setSelectedCurrencies(selectedOptions);\n  };\n\n  const shadeData = {\n    name: \"Shaded Area\",\n    data: filteredData.map((d) => ({\n      x: new Date(d.Date).getTime(),\n      low: Math.min(d.Total, d.Target),\n      high: Math.max(d.Total, d.Target),\n    })),\n    type: \"arearange\",\n    lineWidth: 0,\n    linkedTo: \"Total\",\n    color: \"#28a745\",\n    fillOpacity: 0.3,\n    zIndex: 0,\n    marker: { enabled: false },\n    boostThreshold: 1,\n  };\n\n  const getFilteredTableData = () => {\n    return filteredData.map((d) => {\n      const rowData = {\n        Date: d.Date,\n        Target: d.Target,\n        Total: d.Total,\n      };\n      selectedCurrencies.forEach((currency) => {\n        rowData[currency.value] = d[currency.value];\n      });\n      return rowData;\n    });\n  };\n\n  const getColumns = () => {\n    const baseColumns = [\n      { name: \"Date\", selector: (row) => row.Date, sortable: true },\n      { name: \"Target\", selector: (row) => row.Target, sortable: true },\n    ];\n\n    const currencyColumns = selectedCurrencies.map((currency) => ({\n      name: currency.label,\n      selector: (row) => row[currency.value],\n      sortable: true,\n    }));\n\n    return [\n      ...baseColumns,\n      ...currencyColumns,\n      { name: \"Total\", selector: (row) => row.Total, sortable: true },\n    ];\n  };\n\n  const handleTooltipFormatter = function () {\n    const points = this.points;\n    let targetValue = null;\n    let totalValue = null;\n\n    points.forEach((point) => {\n      if (point.series.name === \"Target\") {\n        targetValue = point.y;\n      }\n      if (point.series.name === \"Total\") {\n        totalValue = point.y;\n      }\n    });\n\n    if (targetValue !== null && totalValue !== null) {\n      const difference = (totalValue - targetValue).toFixed(2);\n      const totalBreakdown = selectedCurrencies\n        .map((currency) => {\n          const point = points.find((p) => p.series.name === currency.value);\n          return point\n            ? `${currency.value}: ${point.y.toFixed(2)}`\n            : `${currency.value}: N/A`;\n        })\n        .join(\"<br>\");\n\n      let summaryHTML = `<strong>Total: ${totalValue.toFixed(2)}</strong><br>`;\n      summaryHTML += `<strong>Target: ${targetValue.toFixed(2)}</strong><br>`;\n      summaryHTML += `<strong>Difference: ${difference}</strong><br>`;\n      summaryHTML += `<strong>Breakdown of Selected Currencies:</strong><br>${totalBreakdown}`;\n\n      latestSummaryRef.current = summaryHTML;\n      return points.reduce((s, point) => {\n        return (\n          s +\n          `<br/><span style=\"color:${point.series.color}\">${point.series.name}</span>: ${point.y}`\n        );\n      }, `<b>${Highcharts.dateFormat(\"%A, %b %e, %Y\", this.x)}</b>`);\n    }\n\n    return points.reduce((s, point) => {\n      return (\n        s +\n        `<br/><span style=\"color:${point.series.color}\">${point.series.name}</span>: ${point.y}`\n      );\n    }, `<b>${Highcharts.dateFormat(\"%A, %b %e, %Y\", this.x)}</b>`);\n  };\n\n  const options = {\n    chart: {\n      type: \"line\",\n      zoomType: \"x\",\n      backgroundColor: {\n        linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n        stops: isDarkMode\n          ? [\n              [0, \"#2e2e2e\"],\n              [1, \"#1a1a1a\"],\n            ]\n          : [\n              [0, \"#ffffff\"],\n              [1, \"#f0f0f0\"],\n            ],\n      },\n      borderRadius: 10, // Rounded corners\n      style: {\n        fontFamily: \"Helvetica, Arial, sans-serif\", // Font style for the chart\n      },\n      plotBorderColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n      plotBorderWidth: 1,\n      events: {\n        load: function () {\n          this.xAxis[0].setExtremes(startDate.getTime(), endDate.getTime());\n        },\n      },\n      boost: {\n        useGPUTranslations: true,\n        usePreAllocated: true,\n      },\n    },\n    title: {\n      text: \"LCH Notional\",\n      style: {\n        color: isDarkMode ? \"#ffffff\" : \"#000000\",\n        fontSize: \"22px\",\n        fontWeight: \"bold\",\n      },\n    },\n    xAxis: {\n      type: \"datetime\",\n      title: {\n        text: \"Date\",\n        style: {\n          color: isDarkMode ? \"#cccccc\" : \"#000000\",\n          fontSize: \"14px\",\n          fontWeight: \"bold\",\n        },\n      },\n      lineColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n      tickColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n      labels: {\n        style: {\n          color: isDarkMode ? \"#cccccc\" : \"#000000\",\n          fontSize: \"12px\",\n        },\n      },\n    },\n    yAxis: {\n      title: {\n        text: \"Notional (USD)\",\n        style: {\n          color: isDarkMode ? \"#cccccc\" : \"#000000\",\n          fontSize: \"14px\",\n          fontWeight: \"bold\",\n        },\n      },\n      gridLineColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n      labels: {\n        style: {\n          color: isDarkMode ? \"#cccccc\" : \"#000000\",\n          fontSize: \"12px\",\n        },\n      },\n    },\n    legend: {\n      layout: \"horizontal\",\n      align: \"center\",\n      verticalAlign: \"bottom\",\n      itemStyle: {\n        color: isDarkMode ? \"#ffffff\" : \"#000000\",\n        fontSize: \"14px\",\n        fontWeight: \"bold\",\n      },\n      itemHoverStyle: {\n        color: isDarkMode ? \"#cccccc\" : \"#000000\",\n      },\n      itemHiddenStyle: {\n        color: isDarkMode ? \"#666666\" : \"#999999\",\n      },\n    },\n    tooltip: {\n      shared: true,\n      backgroundColor: isDarkMode\n        ? \"rgba(33, 33, 33, 0.85)\"\n        : \"rgba(255, 255, 255, 0.85)\",\n      borderColor: isDarkMode ? \"#666666\" : \"#cccccc\",\n      style: {\n        color: isDarkMode ? \"#ffffff\" : \"#000000\",\n      },\n      formatter: handleTooltipFormatter,\n    },\n    series: getData(),\n    navigation: {\n      buttonOptions: {\n        enabled: true,\n        theme: {\n          fill: isDarkMode ? \"#444444\" : \"#f0f0f0\",\n          stroke: isDarkMode ? \"#666666\" : \"#cccccc\",\n          style: {\n            color: isDarkMode ? \"#ffffff\" : \"#000000\",\n          },\n        },\n      },\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          symbolStroke: isDarkMode ? \"#cccccc\" : \"#000000\",\n          theme: {\n            fill: isDarkMode ? \"#444444\" : \"#f0f0f0\",\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <div\n      className={`app-container ${isDarkMode ? \"dark-theme\" : \"light-theme\"}`}\n    >\n      <div className=\"app-container\">\n        <Topbar />\n        <div className=\"floating-box-container\">\n          <div className=\"translucent-box\">\n            <div className=\"control-group\">\n              <h2>Select Currencies to Include in Total:</h2>\n              <Select\n                isMulti\n                name=\"currencies\"\n                options={[\n                  { value: \"AUD\", label: \"AUD\" },\n                  { value: \"EUR\", label: \"EUR\" },\n                  { value: \"GBP\", label: \"GBP\" },\n                  { value: \"JPY\", label: \"JPY\" },\n                  { value: \"USD\", label: \"USD\" },\n                  // add more currencies as needed\n                ]}\n                classNamePrefix=\"select\"\n                value={selectedCurrencies}\n                onChange={handleCurrencyChange}\n              />\n            </div>\n            <div className=\"control-group\">\n              <div className=\"date-picker\">\n                <h2>Select Date Range:</h2>\n                <DatePicker\n                  selected={startDate}\n                  onChange={(date) => setStartDate(date)}\n                  selectsStart\n                  startDate={startDate}\n                  endDate={endDate}\n                  className=\"date-input\"\n                />\n                <DatePicker\n                  selected={endDate}\n                  onChange={(date) => setEndDate(date)}\n                  selectsEnd\n                  startDate={startDate}\n                  endDate={endDate}\n                  className=\"date-input\"\n                />\n              </div>\n            </div>\n            <div className=\"summary-box\">\n              <h3>Summary</h3>\n              <div dangerouslySetInnerHTML={{ __html: summary }} />\n            </div>\n            <div className=\"data-table-section\">\n              <DataTable\n                title=\"LCH Notional | Summary Table\"\n                columns={getColumns()}\n                data={getFilteredTableData()}\n                pagination\n                highlightOnHover\n                pointerOnHover\n                customStyles={customTableStyles}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"main-panel\">\n          <HighchartsReact\n            highcharts={Highcharts}\n            options={options}\n            ref={chartRef}\n          />\n        </div>\n        <div className=\"translucent-box2\">\n          <h2>Graph Options</h2>\n          <button\n            onClick={() => setCompareWithTarget(!compareWithTarget)}\n            className=\"toggle-button\"\n          >\n            {compareWithTarget\n              ? \"Disable Compare with Target\"\n              : \"Enable Compare with Target\"}\n          </button>\n          <div className=\"download-section\">\n            <button\n              onClick={() =>\n                chartRef.current.chart.exportChart({ type: \"image/png\" })\n              }\n            >\n              PNG\n            </button>\n            <button\n              onClick={() =>\n                chartRef.current.chart.exportChart({ type: \"image/jpeg\" })\n              }\n            >\n              JPEG\n            </button>\n            <button\n              onClick={() =>\n                chartRef.current.chart.exportChart({ type: \"application/pdf\" })\n              }\n            >\n              PDF\n            </button>\n            <button\n              onClick={() =>\n                chartRef.current.chart.exportChart({ type: \"image/svg+xml\" })\n              }\n            >\n              SVG\n            </button>\n          </div>\n          <button\n            onClick={() => setIsDarkMode(!isDarkMode)}\n            className=\"toggle-button\"\n          >\n            Toggle Dark Mode\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HighchartsGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}