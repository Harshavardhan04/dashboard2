{"ast":null,"code":"var _jsxFileName = \"/Users/harshmishra/Desktop/dashboard/frontend/src/Components/Graph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport HighchartsBoost from \"highcharts/modules/boost\";\nimport HighchartsExporting from \"highcharts/modules/exporting\";\nimport HighchartsAnnotations from \"highcharts/modules/annotations\";\nimport HighchartsMore from \"highcharts/highcharts-more\";\nimport DataTable from \"react-data-table-component\";\nimport DatePicker from \"react-datepicker\";\nimport Select from \"react-select\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Topbar from \"./Topbar\";\nimport \"../Styles/Graph.css\";\nimport Sidebar from \"./Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nHighchartsBoost(Highcharts);\nHighchartsExporting(Highcharts);\nHighchartsAnnotations(Highcharts);\nHighchartsMore(Highcharts);\nconst Graph = () => {\n  _s();\n  const [compareWithTarget, setCompareWithTarget] = useState(false);\n  const [selectedCurrencies, setSelectedCurrencies] = useState([{\n    value: \"AUD\",\n    label: \"AUD\"\n  }]);\n  const [summary, setSummary] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date(\"2022-06-01\"));\n  const [endDate, setEndDate] = useState(new Date(\"2024-06-25\"));\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const latestSummaryRef = useRef(\"\");\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/xva\");\n        const result = await response.json();\n        setData(result);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const getFilteredData = () => {\n    return data.filter(d => {\n      const date = new Date(d.Date).getTime();\n      return date >= startDate.getTime() && date <= endDate.getTime();\n    });\n  };\n  useEffect(() => {\n    if (!loading && data.length > 0) {\n      const updateSummary = () => {\n        if (summary !== latestSummaryRef.current) {\n          setSummary(latestSummaryRef.current);\n        }\n      };\n      const interval = setInterval(updateSummary, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [loading, data, summary]);\n  const filteredData = getFilteredData();\n  const totalLine = {\n    name: \"Total\",\n    data: filteredData.map(d => [new Date(d.Date).getTime(), d.Total]),\n    color: isDarkMode ? \"#007bff\" : \"#343a40\",\n    marker: {\n      enabled: false\n    },\n    zIndex: 1,\n    boostThreshold: 1\n  };\n  const shadeData = {\n    name: \"Shaded Area\",\n    data: filteredData.map(d => ({\n      x: new Date(d.Date).getTime(),\n      low: Math.min(d.Total, d.Target),\n      high: Math.max(d.Total, d.Target)\n    })),\n    type: \"arearange\",\n    lineWidth: 0,\n    linkedTo: \"Total\",\n    color: \"#2E8C39\",\n    fillOpacity: 0.3,\n    zIndex: 0,\n    marker: {\n      enabled: false\n    },\n    boostThreshold: 0,\n    boost: false\n  };\n  const handleCurrencyChange = selectedOptions => {\n    setSelectedCurrencies(selectedOptions);\n  };\n  const getData = () => {\n    const compareData = [...selectedCurrencies.map(currency => ({\n      name: currency.value,\n      data: filteredData.map(d => [new Date(d.Date).getTime(), d[currency.value]]),\n      color: getCurrencyColor(currency.value),\n      marker: {\n        enabled: false\n      },\n      boostThreshold: 1\n    })), totalLine, {\n      name: \"Target\",\n      data: filteredData.map(d => [new Date(d.Date).getTime(), d.Target]),\n      color: \"#007bff\",\n      marker: {\n        enabled: false\n      },\n      zIndex: 1,\n      boostThreshold: 1\n    }, shadeData];\n    return compareWithTarget ? compareData : compareData.slice(0, -1);\n  };\n  const getCurrencyColor = currency => {\n    switch (currency) {\n      case \"AUD\":\n        return \"#FFD700\";\n      case \"EUR\":\n        return \"#FF6347\";\n      case \"GBP\":\n        return \"#4682B4\";\n      case \"JPY\":\n        return \"#32CD32\";\n      case \"USD\":\n        return \"#FFA07A\";\n      case \"BRL\":\n        return \"#9400D3\";\n      case \"CAD\":\n        return \"#00FF00\";\n      case \"CHF\":\n        return \"#FF00FF\";\n      case \"CLP\":\n        return \"#00FFFF\";\n      case \"CNY\":\n        return \"#FF4500\";\n      case \"CZK\":\n        return \"#FF1493\";\n      case \"DKK\":\n        return \"#1E90FF\";\n      case \"HKD\":\n        return \"#FF69B4\";\n      case \"HUF\":\n        return \"#8A2BE2\";\n      case \"INR\":\n        return \"#00BFFF\";\n      case \"KRW\":\n        return \"#7B68EE\";\n      case \"NOK\":\n        return \"#FFD700\";\n      case \"NZD\":\n        return \"#FF6347\";\n      case \"PLN\":\n        return \"#4682B4\";\n      case \"SEK\":\n        return \"#32CD32\";\n      case \"SGD\":\n        return \"#FFA07A\";\n      case \"THB\":\n        return \"#9400D3\";\n      case \"TWD\":\n        return \"#00FF00\";\n      case \"ZAR\":\n        return \"#FF00FF\";\n      default:\n        return \"#FF4500\";\n    }\n    ;\n  };\n  const getColumns = () => {\n    const baseColumns = [{\n      name: \"Date\",\n      selector: row => row.Date,\n      sortable: true\n    }, {\n      name: \"Target\",\n      selector: row => row.Target,\n      sortable: true\n    }];\n    const currencyColumns = selectedCurrencies.map(currency => ({\n      name: currency.label,\n      selector: row => row[currency.value],\n      sortable: true\n    }));\n    return [...baseColumns, ...currencyColumns, {\n      name: \"Total\",\n      selector: row => row.Total,\n      sortable: true\n    }];\n  };\n  const getFilteredTableData = () => {\n    return filteredData.map(d => {\n      const rowData = {\n        Data: d.Date,\n        Target: d.Target,\n        Total: d.Total\n      };\n      selectedCurrencies.forEach(currency => {\n        rowData[currency.value] = d[currency.value];\n      });\n      return rowData;\n    });\n  };\n  const handleTooltipFormatter = function () {\n    const points = this.points;\n    let targetValue = null;\n    let totalValue = null;\n    points.forEach(point => {\n      if (point.series.name === \"Target\") {\n        targetValue = point.y;\n      }\n      if (point.series.name === \"Total\") {\n        totalValue = point.y;\n      }\n    });\n    if (targetValue !== null && totalValue !== null) {\n      const difference = (totalValue - targetValue).toFixed(2);\n      const totalBreakdown = selectedCurrencies.map(currency => {\n        const point = points.find(p => p.series.name === currency.value);\n        return point ? `${currency.value}: ${point.y.toFixed(2)}` : `${currency.value}: N/A`;\n      }).join(\"<br>\");\n      let summaryHTML = `<strong>Total: ${totalValue.toFixed(2)}</strong><br>`;\n      summaryHTML += `<strong>Target: ${targetValue.toFixed(2)}</strong><br>`;\n      summaryHTML += `Difference: ${difference}<br><br>`;\n      summaryHTML += `<strong>Breakdown of Selected Currencies:</strong><br>${totalBreakdown}`;\n      latestSummaryRef.current = summaryHTML;\n      return points.reduce((s, point) => {\n        return s + `<br><span style=\"color:${point.series.color}\">${point.series.name}</span>: ${point.y}`;\n      }, `<b>${Highcharts.dateFormat(\"%A, %b %e, %Y\", this.x)}</b>`);\n    }\n    return points.reduce((s, point) => {\n      return s + `<br><span style=\"color:${point.series.color}\">${point.series.name}</span>: ${point.y}`;\n    }, `<b>${Highcharts.dateFormat(\"%A, %b %e, %Y\", this.x)}</b>`);\n  };\n  const options = {\n    chart: {\n      type: \"line\",\n      zoomType: \"x\",\n      backgroundColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 1,\n          y2: 1\n        },\n        stops: isDarkMode ? [[0, \"#2e2e2e\"], [1, \"#1a1a1a\"]] : [[0, \"#ffffff\"], [1, \"#f0f0f0\"]]\n      },\n      borderRadius: 10,\n      // Rounded corners\n      style: {\n        fontFamily: \"Helvetica, Arial, sans-serif\" // Font style for the chart\n      },\n      plotBorderColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n      plotBorderWidth: 1,\n      events: {\n        load: function () {\n          this.xAxis[0].setExtremes(startDate.getTime(), endDate.getTime());\n        }\n      },\n      boost: {\n        useGPUTranslations: true,\n        usePreAllocated: true\n      }\n    },\n    title: {\n      text: \"LCH Notional\",\n      style: {\n        color: isDarkMode ? \"#ffffff\" : \"#000000\",\n        fontSize: \"22px\",\n        fontWeight: \"bold\"\n      }\n    },\n    xAxis: {\n      type: \"datetime\",\n      title: {\n        text: \"Date\",\n        style: {\n          color: isDarkMode ? \"#cccccc\" : \"#000000\",\n          fontSize: \"14px\",\n          fontWeight: \"bold\"\n        }\n      },\n      lineColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n      tickColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n      labels: {\n        style: {\n          color: isDarkMode ? \"#cccccc\" : \"#000000\",\n          fontSize: \"12px\"\n        }\n      }\n    },\n    yAxis: {\n      title: {\n        text: \"Notional (USD)\",\n        style: {\n          color: isDarkMode ? \"#cccccc\" : \"#000000\",\n          fontSize: \"14px\",\n          fontWeight: \"bold\"\n        }\n      },\n      gridLineColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n      labels: {\n        style: {\n          color: isDarkMode ? \"#cccccc\" : \"#000000\",\n          fontSize: \"12px\"\n        }\n      }\n    },\n    legend: {\n      layout: \"horizontal\",\n      align: \"center\",\n      verticalAlign: \"bottom\",\n      itemStyle: {\n        color: isDarkMode ? \"#ffffff\" : \"#000000\",\n        fontSize: \"14px\",\n        fontWeight: \"bold\"\n      },\n      itemHoverStyle: {\n        color: isDarkMode ? \"#cccccc\" : \"#000000\"\n      },\n      itemHiddenStyle: {\n        color: isDarkMode ? \"#666666\" : \"#999999\"\n      }\n    },\n    tooltip: {\n      shared: true,\n      backgroundColor: isDarkMode ? \"rgba(33, 33, 33, 0.85)\" : \"rgba(255, 255, 255, 0.85)\",\n      borderColor: isDarkMode ? \"#666666\" : \"#cccccc\",\n      style: {\n        color: isDarkMode ? \"#ffffff\" : \"#000000\"\n      },\n      formatter: handleTooltipFormatter\n    },\n    series: getData(),\n    navigation: {\n      buttonOptions: {\n        enabled: true,\n        theme: {\n          fill: isDarkMode ? \"#444444\" : \"#f0f0f0\",\n          stroke: isDarkMode ? \"#666666\" : \"#cccccc\",\n          style: {\n            color: isDarkMode ? \"#ffffff\" : \"#000000\"\n          }\n        }\n      }\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          symbolStroke: isDarkMode ? \"#cccccc\" : \"#000000\",\n          theme: {\n            fill: isDarkMode ? \"#444444\" : \"#f0f0f0\"\n          }\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    if (!loading && data.length > 0) {\n      Highcharts.charts.forEach(chart => {\n        if (chart) {\n          chart.xAxis[0].setExtremes(startDate.getTime(), endDate.getTime());\n          chart.series.forEach(series => {\n            series.setData(getData().find(s => s.name === series.name).data);\n          });\n        }\n      });\n    }\n  }, [startDate, endDate, selectedCurrencies, loading, data, isDarkMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${isDarkMode ? 'dark-theme' : 'light-theme'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"floating-box-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"translucent-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"currency-selector\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Select Currencies to Include in Total:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                isMulti: true,\n                name: \"currencies\",\n                options: [{\n                  value: \"AUD\",\n                  label: \"AUD\"\n                }, {\n                  value: \"EUR\",\n                  label: \"EUR\"\n                }, {\n                  value: \"GBP\",\n                  label: \"GBP\"\n                }, {\n                  value: \"JPY\",\n                  label: \"JPY\"\n                }, {\n                  value: \"USD\",\n                  label: \"USD\"\n                }, {\n                  value: \"BRL\",\n                  label: \"BRL\"\n                }, {\n                  value: \"CAD\",\n                  label: \"CAD\"\n                }, {\n                  value: \"CHF\",\n                  label: \"CHF\"\n                }, {\n                  value: \"CLP\",\n                  label: \"CLP\"\n                }, {\n                  value: \"CNY\",\n                  label: \"CNY\"\n                }, {\n                  value: \"CZK\",\n                  label: \"CZK\"\n                }, {\n                  value: \"DKK\",\n                  label: \"DKK\"\n                }, {\n                  value: \"HKD\",\n                  label: \"HKD\"\n                }, {\n                  value: \"HUF\",\n                  label: \"HUF\"\n                }, {\n                  value: \"INR\",\n                  label: \"INR\"\n                }, {\n                  value: \"KRW\",\n                  label: \"KRW\"\n                }, {\n                  value: \"MXN\",\n                  label: \"MXN\"\n                }, {\n                  value: \"NOK\",\n                  label: \"NOK\"\n                }, {\n                  value: \"NZD\",\n                  label: \"NZD\"\n                }, {\n                  value: \"PLN\",\n                  label: \"PLN\"\n                }, {\n                  value: \"SEK\",\n                  label: \"SEK\"\n                }, {\n                  value: \"SGD\",\n                  label: \"SGD\"\n                }, {\n                  value: \"THB\",\n                  label: \"THB\"\n                }, {\n                  value: \"TWD\",\n                  label: \"TWD\"\n                }, {\n                  value: \"ZAR\",\n                  label: \"ZAR\"\n                }],\n                classNamePrefix: \"select\",\n                value: selectedCurrencies,\n                onChange: handleCurrencyChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-picker\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Select a date range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                selected: startDate,\n                onChange: date => setStartDate(date),\n                selectsStart: true,\n                startDate: startDate,\n                endDate: endDate,\n                className: \"date-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                selected: endDate,\n                onChange: date => setEndDate(date),\n                selectsEnd: true,\n                startDate: startDate,\n                endDate: endDate,\n                minDate: startDate,\n                className: \"date-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"translucent-box2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Graph Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCompareWithTarget(!compareWithTarget),\n            className: \"toggle-button\",\n            children: compareWithTarget ? \"Disable Compare with Target\" : \"Enable Compare with Target\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"download-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"toggle-button\",\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => chartRef.current.chart.exportChart({\n                  type: \"image/png\"\n                }),\n                children: \"PNG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => chartRef.current.chart.exportChart({\n                  type: \"image/jpeg\"\n                }),\n                children: \"JPEG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => chartRef.current.chart.exportChart({\n                  type: \"application/pdf\"\n                }),\n                children: \"PDF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => chartRef.current.chart.exportChart({\n                  type: \"image/svg+xml\"\n                }),\n                children: \"SVG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsDarkMode(!isDarkMode),\n            className: \"toggle-button\",\n            children: \"Toggle Dark Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-panel\",\n        children: [/*#__PURE__*/_jsxDEV(HighchartsReact, {\n          className: \"chart-actual\",\n          highcharts: Highcharts,\n          options: options,\n          containerProps: {\n            className: \"chart-container\"\n          },\n          updateArgs: [true, true, true],\n          ref: chartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 3\n        }, this), compareWithTarget && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: summary\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-table-section\",\n          children: /*#__PURE__*/_jsxDEV(DataTable, {\n            title: \"LCH Notional | Summary Table\",\n            columns: getColumns(),\n            data: getFilteredTableData(),\n            pagination: true,\n            highlightOnHover: true,\n            pointerOnHover: true,\n            customStyles: customTableStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"Des4TVJ7kPxO3ZOFZLqtdt4q16E=\");\n_c = Graph;\nconst customTableStyles = {\n  header: {\n    style: {\n      fontSize: '22px',\n      fontWeight: 'bold',\n      color: 'var(--text-color)',\n      backgroundColor: 'var(--control-bg-color)'\n    }\n  },\n  rows: {\n    style: {\n      fontSize: '16px',\n      color: 'var(--text-color)',\n      backgroundColor: 'var(--input-bg-color)',\n      '&:not(:last-of-type)': {\n        borderBottomStyle: 'solid',\n        borderBottomWidth: '1px',\n        borderBottomColor: 'var(--control-bg-color)'\n      }\n    }\n  },\n  headCells: {\n    style: {\n      fontSize: '18px',\n      fontWeight: 'bold',\n      color: 'var(--text-color)',\n      backgroundColor: 'var(--control-bg-color)'\n    }\n  },\n  cells: {\n    style: {\n      fontSize: '16px',\n      color: 'var(--text-color)',\n      backgroundColor: 'var(--input-bg-color)'\n    }\n  }\n};\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Highcharts","HighchartsReact","HighchartsBoost","HighchartsExporting","HighchartsAnnotations","HighchartsMore","DataTable","DatePicker","Select","Topbar","Sidebar","jsxDEV","_jsxDEV","Graph","_s","compareWithTarget","setCompareWithTarget","selectedCurrencies","setSelectedCurrencies","value","label","summary","setSummary","startDate","setStartDate","Date","endDate","setEndDate","data","setData","loading","setLoading","isDarkMode","setIsDarkMode","latestSummaryRef","chartRef","fetchData","response","fetch","result","json","error","console","getFilteredData","filter","d","date","getTime","length","updateSummary","current","interval","setInterval","clearInterval","filteredData","totalLine","name","map","Total","color","marker","enabled","zIndex","boostThreshold","shadeData","x","low","Math","min","Target","high","max","type","lineWidth","linkedTo","fillOpacity","boost","handleCurrencyChange","selectedOptions","getData","compareData","currency","getCurrencyColor","slice","getColumns","baseColumns","selector","row","sortable","currencyColumns","getFilteredTableData","rowData","Data","forEach","handleTooltipFormatter","points","targetValue","totalValue","point","series","y","difference","toFixed","totalBreakdown","find","p","join","summaryHTML","reduce","s","dateFormat","options","chart","zoomType","backgroundColor","linearGradient","x1","y1","x2","y2","stops","borderRadius","style","fontFamily","plotBorderColor","plotBorderWidth","events","load","xAxis","setExtremes","useGPUTranslations","usePreAllocated","title","text","fontSize","fontWeight","lineColor","tickColor","labels","yAxis","gridLineColor","legend","layout","align","verticalAlign","itemStyle","itemHoverStyle","itemHiddenStyle","tooltip","shared","borderColor","formatter","navigation","buttonOptions","theme","fill","stroke","exporting","buttons","contextButton","symbolStroke","charts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isMulti","classNamePrefix","onChange","selected","selectsStart","selectsEnd","minDate","onClick","exportChart","highcharts","containerProps","updateArgs","ref","dangerouslySetInnerHTML","__html","columns","pagination","highlightOnHover","pointerOnHover","customStyles","customTableStyles","_c","header","rows","borderBottomStyle","borderBottomWidth","borderBottomColor","headCells","cells","$RefreshReg$"],"sources":["/Users/harshmishra/Desktop/dashboard/frontend/src/Components/Graph.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport HighchartsBoost from \"highcharts/modules/boost\";\nimport HighchartsExporting from \"highcharts/modules/exporting\";\nimport HighchartsAnnotations from \"highcharts/modules/annotations\";\nimport HighchartsMore from \"highcharts/highcharts-more\";\nimport DataTable from \"react-data-table-component\";\nimport DatePicker from \"react-datepicker\";\nimport Select from \"react-select\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Topbar from \"./Topbar\";\nimport \"../Styles/Graph.css\";\nimport Sidebar from \"./Sidebar\";\nHighchartsBoost(Highcharts);\nHighchartsExporting(Highcharts);\nHighchartsAnnotations(Highcharts);\nHighchartsMore(Highcharts);\n\nconst Graph = () => {\n  const [compareWithTarget, setCompareWithTarget] = useState(false);\n  const [selectedCurrencies, setSelectedCurrencies] = useState([\n    { value: \"AUD\", label: \"AUD\" },\n  ]);\n  const [summary, setSummary] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date(\"2022-06-01\"));\n  const [endDate, setEndDate] = useState(new Date(\"2024-06-25\"));\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const latestSummaryRef = useRef(\"\");\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/xva\");\n        const result = await response.json();\n        setData(result);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const getFilteredData = () => {\n    return data.filter((d) => {\n      const date = new Date(d.Date).getTime();\n      return date >= startDate.getTime() && date <= endDate.getTime();\n    });\n  };\n  useEffect(() => {\n    if (!loading && data.length > 0) {\n      const updateSummary = () => {\n        if (summary !== latestSummaryRef.current) {\n          setSummary(latestSummaryRef.current);\n        }\n      };\n      const interval = setInterval(updateSummary, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [loading, data, summary]);\n  \n  const filteredData = getFilteredData();\n  \n  const totalLine = {\n    name: \"Total\",\n    data: filteredData.map((d) => [new Date(d.Date).getTime(), d.Total]),\n    color: isDarkMode ? \"#007bff\" : \"#343a40\",\n    marker: { enabled: false },\n    zIndex: 1,\n    boostThreshold: 1,\n  };\n  \n  const shadeData = {\n    name: \"Shaded Area\",\n    data: filteredData.map((d) => ({\n      x: new Date(d.Date).getTime(),\n      low: Math.min(d.Total, d.Target),\n      high: Math.max(d.Total, d.Target),\n    })),\n    type: \"arearange\",\n    lineWidth: 0,\n    linkedTo: \"Total\",\n    color: \"#2E8C39\",\n    fillOpacity: 0.3,\n    zIndex: 0,\n    marker: { enabled: false },\n    boostThreshold: 0,\n    boost: false,\n  };\n  \n  const handleCurrencyChange = (selectedOptions) => {\n    setSelectedCurrencies(selectedOptions);\n  };\n  \n  const getData = () => {\n    const compareData = [\n      ...selectedCurrencies.map((currency) => ({\n        name: currency.value,\n        data: filteredData.map((d) => [\n          new Date(d.Date).getTime(),\n          d[currency.value],\n        ]),\n        color: getCurrencyColor(currency.value),\n        marker: { enabled: false },\n        boostThreshold: 1,\n      })),\n    totalLine,\n    {\n        name: \"Target\",\n        data: filteredData.map((d) => [new Date(d.Date).getTime(), d.Target]),\n        color: \"#007bff\",\n        marker: { enabled: false },\n        zIndex: 1,\n        boostThreshold: 1,\n\n    },\n    shadeData,\n    ];\n    return compareWithTarget ? compareData : compareData.slice(0, -1);\n    };\n\n    const getCurrencyColor = (currency) => {\n    switch (currency) {\n        case \"AUD\":\n        return \"#FFD700\";\n        case \"EUR\":\n        return \"#FF6347\";\n        case \"GBP\":\n        return \"#4682B4\";\n        case \"JPY\":\n        return \"#32CD32\";\n        case \"USD\":\n        return \"#FFA07A\";\n        case \"BRL\":\n        return \"#9400D3\";\n        case \"CAD\":\n        return \"#00FF00\";\n        case \"CHF\":\n        return \"#FF00FF\";\n        case \"CLP\":\n        return \"#00FFFF\";\n        case \"CNY\":\n        return \"#FF4500\";\n        case \"CZK\":\n        return \"#FF1493\";\n        case \"DKK\":\n        return \"#1E90FF\";\n        case \"HKD\":\n        return \"#FF69B4\";\n        case \"HUF\":\n        return \"#8A2BE2\";\n        case \"INR\":\n        return \"#00BFFF\";\n        case \"KRW\":\n        return \"#7B68EE\";\n        case \"NOK\":\n        return \"#FFD700\";\n        case \"NZD\":\n        return \"#FF6347\";\n        case \"PLN\":\n        return \"#4682B4\";\n        case \"SEK\":\n        return \"#32CD32\";\n        case \"SGD\":\n        return \"#FFA07A\";\n        case \"THB\":\n        return \"#9400D3\";\n        case \"TWD\":\n        return \"#00FF00\";\n        case \"ZAR\":\n        return \"#FF00FF\";\n        default:\n        return \"#FF4500\";\n    };\n    };\n\n    const getColumns=()=>{\n        const baseColumns = [\n            {name: \"Date\", selector: (row)=> row.Date,sortable: true},\n            {name: \"Target\", selector: (row)=> row.Target,sortable: true},\n        ];\n\n        const currencyColumns = selectedCurrencies.map((currency)=>({\n            name: currency.label,\n            selector: (row)=> row[currency.value],\n            sortable: true,\n        }));\n\n        return [...baseColumns, ...currencyColumns,{name: \"Total\", selector: (row)=> row.Total,sortable: true},\n\n        ];\n    };\n    const getFilteredTableData = ()=>{\n        return filteredData.map((d)=>{\n            const rowData={\n                Data: d.Date,\n                Target: d.Target,\n                Total: d.Total,\n            };\n            selectedCurrencies.forEach((currency)=>{\n                rowData[currency.value] = d[currency.value];\n        });\n        return rowData;\n        });\n\n};\nconst handleTooltipFormatter = function () {\n    const points = this.points;\n    let targetValue = null;\n    let totalValue = null;\n  \n    points.forEach((point) => {\n      if (point.series.name === \"Target\") {\n        targetValue = point.y;\n      }\n      if (point.series.name === \"Total\") {\n        totalValue = point.y;\n      }\n    });\n  \n    if (targetValue !== null && totalValue !== null) {\n      const difference = (totalValue - targetValue).toFixed(2);\n      const totalBreakdown = selectedCurrencies\n        .map((currency) => {\n          const point = points.find((p) => p.series.name === currency.value);\n          return point\n            ? `${currency.value}: ${point.y.toFixed(2)}`\n            : `${currency.value}: N/A`;\n        })\n        .join(\"<br>\");\n  \n      let summaryHTML = `<strong>Total: ${totalValue.toFixed(2)}</strong><br>`;\n      summaryHTML += `<strong>Target: ${targetValue.toFixed(2)}</strong><br>`;\n      summaryHTML += `Difference: ${difference}<br><br>`;\n      summaryHTML += `<strong>Breakdown of Selected Currencies:</strong><br>${totalBreakdown}`;\n  \n      latestSummaryRef.current = summaryHTML;\n    \n  \n    return points.reduce((s, point) => {\n      return (\n        s +\n        `<br><span style=\"color:${point.series.color}\">${point.series.name}</span>: ${point.y}`\n      );\n    }, `<b>${Highcharts.dateFormat(\"%A, %b %e, %Y\", this.x)}</b>`);\n}\n  return points.reduce((s,point)=>{\n        return(\n            s+\n            `<br><span style=\"color:${point.series.color}\">${point.series.name}</span>: ${point.y}`\n        );\n  }, `<b>${Highcharts.dateFormat(\"%A, %b %e, %Y\", this.x)}</b>`);\n};\nconst options = {\n    chart: {\n      type: \"line\",\n      zoomType: \"x\",\n      backgroundColor: {\n        linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n        stops: isDarkMode\n          ? [\n              [0, \"#2e2e2e\"],\n              [1, \"#1a1a1a\"],\n            ]\n          : [\n              [0, \"#ffffff\"],\n              [1, \"#f0f0f0\"],\n            ],\n      },\n      borderRadius: 10, // Rounded corners\n      style: {\n        fontFamily: \"Helvetica, Arial, sans-serif\", // Font style for the chart\n      },\n      plotBorderColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n      plotBorderWidth: 1,\n      events: {\n        load: function () {\n          this.xAxis[0].setExtremes(startDate.getTime(), endDate.getTime());\n        },\n      },\n      boost: {\n        useGPUTranslations: true,\n        usePreAllocated: true,\n      },\n    },\n    title: {\n      text: \"LCH Notional\",\n      style: {\n        color: isDarkMode ? \"#ffffff\" : \"#000000\",\n        fontSize: \"22px\",\n        fontWeight: \"bold\",\n      },\n    },\n    xAxis: {\n      type: \"datetime\",\n      title: {\n        text: \"Date\",\n        style: {\n          color: isDarkMode ? \"#cccccc\" : \"#000000\",\n          fontSize: \"14px\",\n          fontWeight: \"bold\",\n        },\n      },\n      lineColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n      tickColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n      labels: {\n        style: {\n          color: isDarkMode ? \"#cccccc\" : \"#000000\",\n          fontSize: \"12px\",\n        },\n      },\n    },\n    yAxis: {\n      title: {\n        text: \"Notional (USD)\",\n        style: {\n          color: isDarkMode ? \"#cccccc\" : \"#000000\",\n          fontSize: \"14px\",\n          fontWeight: \"bold\",\n        },\n      },\n      gridLineColor: isDarkMode ? \"#444444\" : \"#cccccc\",\n      labels: {\n        style: {\n          color: isDarkMode ? \"#cccccc\" : \"#000000\",\n          fontSize: \"12px\",\n        },\n      },\n    },\n    legend: {\n      layout: \"horizontal\",\n      align: \"center\",\n      verticalAlign: \"bottom\",\n      itemStyle: {\n        color: isDarkMode ? \"#ffffff\" : \"#000000\",\n        fontSize: \"14px\",\n        fontWeight: \"bold\",\n      },\n      itemHoverStyle: {\n        color: isDarkMode ? \"#cccccc\" : \"#000000\",\n      },\n      itemHiddenStyle: {\n        color: isDarkMode ? \"#666666\" : \"#999999\",\n      },\n    },\n    tooltip: {\n      shared: true,\n      backgroundColor: isDarkMode ? \"rgba(33, 33, 33, 0.85)\" : \"rgba(255, 255, 255, 0.85)\",\n      borderColor: isDarkMode ? \"#666666\" : \"#cccccc\",\n      style: {\n        color: isDarkMode ? \"#ffffff\" : \"#000000\",\n      },\n      formatter: handleTooltipFormatter,\n    },\n    series: getData(),\n    navigation: {\n      buttonOptions: {\n        enabled: true,\n        theme: {\n          fill: isDarkMode ? \"#444444\" : \"#f0f0f0\",\n          stroke: isDarkMode ? \"#666666\" : \"#cccccc\",\n          style: {\n            color: isDarkMode ? \"#ffffff\" : \"#000000\",\n          },\n        },\n      },\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          symbolStroke: isDarkMode ? \"#cccccc\" : \"#000000\",\n          theme: {\n            fill: isDarkMode ? \"#444444\" : \"#f0f0f0\",\n          },\n        },\n      },\n    },\n  };\n\n  useEffect(()=>{\n    if (!loading && data.length>0){\n        Highcharts.charts.forEach((chart)=>{\n            if(chart){\n                chart.xAxis[0].setExtremes(startDate.getTime(),endDate.getTime());\n                chart.series.forEach((series)=>{\n                    series.setData(getData().find((s)=>s.name === series.name).data);\n                });\n            }\n        });\n    }\n  },[startDate,endDate,selectedCurrencies,loading,data,isDarkMode]);\n\n  return(\n    <div className={`app-container ${isDarkMode ? 'dark-theme' : 'light-theme'}`}>\n    <div className=\"app-container\">\n      <Topbar />\n      <Sidebar/>\n      <div className=\"floating-box-container\">\n        <div className=\"translucent-box\">\n          <div className=\"control-group\">\n            <div className=\"currency-selector\">\n              <h2>Select Currencies to Include in Total:</h2>\n              <Select\n                isMulti\n                name=\"currencies\"\n                options={[\n                  { value: \"AUD\", label: \"AUD\" },\n                  { value: \"EUR\", label: \"EUR\" },\n                  { value: \"GBP\", label: \"GBP\" },\n                  { value: \"JPY\", label: \"JPY\" },\n                  { value: \"USD\", label: \"USD\" },\n                  { value: \"BRL\", label: \"BRL\" },\n                  { value: \"CAD\", label: \"CAD\" },\n                  { value: \"CHF\", label: \"CHF\" },\n                  { value: \"CLP\", label: \"CLP\" },\n                  { value: \"CNY\", label: \"CNY\" },\n                  { value: \"CZK\", label: \"CZK\" },\n                  { value: \"DKK\", label: \"DKK\" },\n                  { value: \"HKD\", label: \"HKD\" },\n                  { value: \"HUF\", label: \"HUF\" },\n                  { value: \"INR\", label: \"INR\" },\n                  { value: \"KRW\", label: \"KRW\" },\n                  { value: \"MXN\", label: \"MXN\" },\n                  { value: \"NOK\", label: \"NOK\" },\n                  { value: \"NZD\", label: \"NZD\" },\n                  { value: \"PLN\", label: \"PLN\" },\n                  { value: \"SEK\", label: \"SEK\" },\n                  { value: \"SGD\", label: \"SGD\" },\n                  { value: \"THB\", label: \"THB\" },\n                  { value: \"TWD\", label: \"TWD\" },\n                  { value: \"ZAR\", label: \"ZAR\" },\n                ]}\n                classNamePrefix={\"select\"}\n                value={selectedCurrencies}\n                onChange={handleCurrencyChange}\n              />\n            </div>\n            </div>\n\n            <div className=\"control-group\">\n                <div className = \"date-picker\">\n                    <h2>Select a date range</h2>\n                    <DatePicker\n                        selected={startDate}\n                        onChange={(date)=>setStartDate(date)}\n                        selectsStart\n                        startDate={startDate}\n                        endDate={endDate}\n                        className=\"date-input\"\n                        />\n                        <DatePicker\n                        selected={endDate}\n                        onChange={(date)=>setEndDate(date)}\n                        selectsEnd\n                        startDate={startDate}\n                        endDate={endDate}\n                        minDate={startDate}\n                        className=\"date-input\"\n                        />\n                        </div>\n                        </div>\n                        </div>\n                        <div className=\"translucent-box2\">\n  <h2>Graph Options</h2>\n  <button\n    onClick={() => setCompareWithTarget(!compareWithTarget)}\n    className=\"toggle-button\"\n  >\n    {compareWithTarget\n      ? \"Disable Compare with Target\"\n      : \"Enable Compare with Target\"}\n  </button>\n\n  <div className=\"download-section\">\n    <button className=\"toggle-button\">Download</button>\n    <div className=\"dropdown-content\">\n      <button\n        onClick={() =>\n          chartRef.current.chart.exportChart({ type: \"image/png\" })\n        }\n      >\n        PNG\n      </button>\n      <button\n        onClick={() =>\n          chartRef.current.chart.exportChart({ type: \"image/jpeg\" })\n        }\n      >\n        JPEG\n      </button>\n      <button\n        onClick={() =>\n          chartRef.current.chart.exportChart({ type: \"application/pdf\" })\n        }\n      >\n        PDF\n      </button>\n      <button\n        onClick={() =>\n          chartRef.current.chart.exportChart({ type: \"image/svg+xml\" })\n        }\n      >\n        SVG\n      </button>\n    </div>\n  </div>\n  <button\n    onClick={() => setIsDarkMode(!isDarkMode)}\n    className=\"toggle-button\"\n  >\n    Toggle Dark Mode\n  </button>\n</div>\n</div>\n<div className=\"main-panel\">\n  <HighchartsReact\n    className=\"chart-actual\"\n    highcharts={Highcharts}\n    options={options}\n    containerProps={{ className: \"chart-container\" }}\n    updateArgs={[true, true, true]}\n    ref={chartRef}\n  />\n  {compareWithTarget && (\n    <div className=\"summary-box\">\n      <h3>Summary</h3>\n      <div dangerouslySetInnerHTML={{ __html: summary }} />\n    </div>\n  )}\n\n  <div className=\"data-table-section\">\n    <DataTable\n      title=\"LCH Notional | Summary Table\"\n      columns={getColumns()}\n      data={getFilteredTableData()}\n      pagination\n      highlightOnHover\n      pointerOnHover\n      customStyles={customTableStyles}\n    />\n  </div>\n</div>\n</div>\n</div>\n  );\n  \n};\nconst customTableStyles = {\n    header: {\n      style: {\n        fontSize: '22px',\n        fontWeight: 'bold',\n        color: 'var(--text-color)',\n        backgroundColor: 'var(--control-bg-color)',\n      },\n    },\n    rows: {\n      style: {\n        fontSize: '16px',\n        color: 'var(--text-color)',\n        backgroundColor: 'var(--input-bg-color)',\n        '&:not(:last-of-type)': {\n          borderBottomStyle: 'solid',\n          borderBottomWidth: '1px',\n          borderBottomColor: 'var(--control-bg-color)',\n        },\n      },\n    },\n    headCells: {\n      style: {\n        fontSize: '18px',\n        fontWeight: 'bold',\n        color: 'var(--text-color)',\n        backgroundColor: 'var(--control-bg-color)',\n      },\n    },\n    cells: {\n      style: {\n        fontSize: '16px',\n        color: 'var(--text-color)',\n        backgroundColor: 'var(--input-bg-color)',\n      },\n    },\n  };\nexport default Graph;  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}